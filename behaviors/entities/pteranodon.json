{
	"format_version": "1.16.0",
	"minecraft:entity": {
		"description": {
			"identifier": "rift:pteranodon",
			"is_summonable": true,
			"is_spawnable": true,
			"is_experimental": false,
			"properties": {
				"rift:is_hypnotized": {
					"type": "bool",
					"default": false,
					"client_sync": true
				},
				"rift:is_hypnotized_tamed": {
					"type": "bool",
					"default": false,
					"client_sync": true
				},
				"rift:undergoing_taming": {
					"type": "bool",
					"default": false,
					"client_sync": true
				},
				"rift:is_forced_attacking": {
					"type": "bool",
					"default": false
				},
                "rift:energy": {
                    "range": [
						0,
						450
					],
					"type": "int",
					"default": 450,
					"client_sync": true
                },
                "rift:tame_state": { //0 for standing, 1 for sitting, 2 for wandering
                    "range": [
						0,
						2
					],
					"type": "int",
					"default": 0,
					"client_sync": true
                },
                "rift:behavior_state": { //0 for assist, 1 for neutral, 2 for aggressive, 3 for passive
                    "range": [
						0,
						3
					],
					"type": "int",
					"default": 0
                },
				"rift:bleeding": {
					"type": "bool",
					"default": false,
					"client_sync": true
                }
			},
			"animations": {
                "contLandingManage": "controller.animation.ptera_on_landing",
                "contFasterWhenMountedFlying": "controller.animation.ptera_faster_when_mounted_flying",
                "contMovingTag": "controller.animation.add_moving_tag",
				"contTameTag": "controller.animation.add_tame_tag",
				"contBabyTag": "controller.animation.add_baby_tag",
				"contRiddenTag": "controller.animation.add_ridden_tag",
				"contPoweredTag": "controller.animation.add_powered_tag",
				"contInLoveTag": "controller.animation.add_in_love_tag",
				"contHypnotizedTag": "controller.animation.add_hypnotized_tag",
				"contHypnotizedTamedTag": "controller.animation.add_hypnotized_by_tamed_tag",
				"contForcedAttack": "controller.animation.general_forced_attack",
				"contTameState": "controller.animation.manage_tame_state",
				"contBehaviorState": "controller.animation.manage_tame_behavior",
				"contEnergyUsage": "controller.animation.pteranodon_energy_movement_usage",
				"contWarnLowEnergy": "controller.animation.warn_of_low_energy",
				"contDieWithoutTenontosaurus": "controller.animation.general_die_without_tenontosaurus",
                "contDieWithoutTamedTenontosaurus": "controller.animation.general_death_timer_tamed_tenontosaurus",
				"contBleed": "controller.animation.general_manage_bleed",
                "animFlyingWhileMounted": "animation.pteranodon_flying_while_mounted",
                "animLanding": "animation.flying_mob_landing",
                "animUseEnergyWhileMoving": "animation.pteranodon_decrease_energy_while_moving",
				"animEnergyRegenDelay": "animation.regenerate_energy_delay",
				"animRegenerateEnergy": "animation.pteranodon_regenerate_energy",
				"animLowOnEnergyEffects": "animation.effects_while_low_on_energy",
				"animNoEnergyEffects": "animation.effects_while_no_energy",
				"animForcedAttack": "animation.forced_attack_pteranodon",
				"animFindTenontosaurus": "animation.find_tenontosaurus",
				"animDeathTimer": "animation.hypnosis_death_timer",
                "animTamedDeathTimer": "animation.hypnosis_death_timer_tamed",
                "animBleed": "animation.general_bleed",
                "animBleedCountdown": "animation.general_bleed_countdown"
			},
			"scripts": {
				"animate": [
                    "contLandingManage",
                    "contFasterWhenMountedFlying",
                    "contMovingTag",
					"contTameTag",
					"contBabyTag",
					"contRiddenTag",
					"contPoweredTag",
					"contInLoveTag",
					"contHypnotizedTag",
                    "contHypnotizedTamedTag",
					"contForcedAttack",
					"contTameState",
					"contBehaviorState",
					"contEnergyUsage",
					"contWarnLowEnergy",
					"contDieWithoutTenontosaurus",
                    "contDieWithoutTamedTenontosaurus",
                    "contBleed"
				]
			}
        },
        "component_groups": {
            "rift:pteranodon_baby": {
                "minecraft:is_baby": {},
                "minecraft:ageable": {
                    "duration": 1200,
                    "grow_up": {
                        "event": "rift:baby_grow_up",
                        "target": "self"
                    },
                    "feed_items": [
						{
							"item": "minecraft:cod",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_cod",
							"growth": 0.125
						},
						{
							"item": "minecraft:salmon",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_salmon",
							"growth": 0.125
						},
						{
							"item": "minecraft:tropical_fish",
							"growth": 0.1
						},
						{
							"item": "minecraft:rotten_flesh",
							"growth": 0.1
						},
						{
							"item": "rift:raw_megapiranha",
							"growth": 0.1
						},
						{
							"item": "rift:cooked_megapiranha",
							"growth": 0.125
						}                 
                    ]
                },
                "minecraft:scale_by_age": {
                    "start_scale": 0.75,
                    "end_scale": 1.75
                }
            },
            "rift:pteranodon_baby_wild": {
                "minecraft:health": {
                    "value": 6
                },
                "minecraft:behavior.follow_parent": {
                    "priority": 14
                },
                "minecraft:tameable": {
                    "probability": 0.25,
                    "tame_items": [
                        "rift:fish_treat",
                        "rift:carrion_treat"
                    ],
                    "tame_event": {
                        "event": "rift:on_tame",
                        "target": "self"
                    }
                },
				"minecraft:despawn": {
					"despawn_from_distance": {}
				}
            },
            "rift:pteranodon_baby_calm": {
                "minecraft:behavior.avoid_block": {
                    "priority": 3,
                    "tick_interval": 5,
                    "search_range": 8,
                    "search_height": 4,
                    "walk_speed_modifier": 1.5,
                    "sprint_speed_modifier": 1.5,
                    "target_selection_method": "nearest",
                    "target_blocks": [
                        "minecraft:fire",
                        "minecraft:soul_fire",
                        "minecraft:item.campfire",
                        "minecraft:item.soul_campfire",
                        "minecraft:torch",
                        "minecraft:soul_torch"
                    ],
                    "on_escape": [
                        {
                            "event": "rift:baby_become_scared",
                            "target": "self"
                        }
                    ]
                },
                "minecraft:entity_sensor": {
                    "minimum_count": 1,
                    "relative_range": true,
                    "sensor_range": 8,
                    "event_filters": {
                        "any_of": [
                            {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wandering_trader"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "villager"
									},
									{
                                        "all_of": [
                                            {
                                                "test": "is_family",
                                                "subject": "other",
                                                "value": "carnivore"
                                            },
                                            {
                                                "test": "is_family",
                                                "subject": "other",
                                                "operator": "!=",
                                                "value": "pteranodon"
                                            }
                                        ]
                                    }
								]
                            },
                            {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:flesh_treat"
									},
									{
										"test": "is_riding",
										"subject": "other",
										"value": false
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": false
									}
								]
                            },
                            {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:flesh_treat"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": false
									}
								]
							}
                        ]
                    },
                    "event": "rift:baby_become_scared"
                }
			},
            "rift:pteranodon_baby_scared": {
				"minecraft:angry": {
					"broadcast_anger": true,
					"broadcast_range": 30,
					"broadcast_filters": {
						"test": "has_component",
						"subject": "other",
						"operator": "!=",
						"value": "minecraft:is_tamed"
					},
					"broadcast_targets": [
						"pteranodon"
					],
					"duration": 15,
					"calm_event": {
						"event": "rift:baby_on_calm",
						"target": "self"
					}
				},
                "minecraft:behavior.panic": {
					"priority": 14,
					"speed_multiplier": 3
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 15,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "mob"
									},
									{
										"test": "is_family",
										"subject": "other",
                                        "operator": "!=",
										"value": "pteranodon"
									}
								]
							},
							"max_dist": 16,
							"walk_speed_multiplier": 3,
							"sprint_speed_multiplier": 3
					  	}
					]
				}
            },
            "rift:pteranodon_baby_tamed": {
                "minecraft:health": {
                    "value": 6,
                    "max": 8
                }
            },
            "rift:pteranodon_adult": {
                "minecraft:scale": {
                    "value": 2.25
                },
                "minecraft:experience_reward": {
                    "on_bred": "Math.random(3, 5)",
                    "on_death": "query.last_hit_by_player ? Math.random(1, 3) : 0"
                },
                "minecraft:loot": {
                    "table": "loot_tables/entities/pteranodon.loot.json"
                },
                "minecraft:attack": {
                    "damage": 4
                }
            },
            "rift:pteranodon_adult_wild": {
                "minecraft:health": {
                    "value": 10,
                    "max": 10
                },
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:shareables": {
					"all_items_max_amount": 1,
					"items": [
						{ 
							"item": "minecraft:cod", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "minecraft:cooked_cod", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "minecraft:salmon", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "minecraft:cooked_salmon", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "minecraft:tropical_fish", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "minecraft:rotten_flesh", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "rift:raw_fibrous_meat", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "rift:cooked_fibrous_meat", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "rift:raw_megapiranha", 
							"priority": 0, 
							"max_amount": 1 
						},
						{ 
							"item": "rift:cooked_megapiranha", 
							"priority": 0, 
							"max_amount": 1 
						}
				  	]
				},
				"minecraft:behavior.pickup_items": {
					"priority": 11,
					"max_dist": 32,
					"goal_radius": 2,
					"speed_multiplier": 1,
					"track_target": true
				},
				"minecraft:behavior.eat_carried_item": {
					"priority": 12,
					"delay_before_eating": 0
				}
            },
            "rift:pteranodon_adult_hypnotized": {
                "minecraft:health": {
                    "value": 10,
                    "max": 10
                },
				"minecraft:despawn": {
					"despawn_from_distance": {}
				}
            },
            "rift:pteranodon_adult_calm": {
                "minecraft:behavior.avoid_block": {
                    "priority": 3,
                    "tick_interval": 5,
                    "search_range": 8,
                    "search_height": 4,
                    "walk_speed_modifier": 1.75,
                    "sprint_speed_modifier": 1.75,
                    "target_selection_method": "nearest",
                    "target_blocks": [
                        "minecraft:fire",
                        "minecraft:soul_fire",
                        "minecraft:item.campfire",
                        "minecraft:item.soul_campfire",
                        "minecraft:torch",
                        "minecraft:soul_torch"
                    ],
                    "on_escape": [
                        {
                            "event": "rift:adult_become_scared",
                            "target": "self"
                        }
                    ]
                },
                "minecraft:entity_sensor": {
                    "minimum_count": 1,
                    "relative_range": true,
                    "sensor_range": 8,
                    "event_filters": {
                        "any_of": [
                            {
								"any_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "wandering_trader"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "villager"
									},
									{
                                        "all_of": [
                                            {
                                                "test": "is_family",
                                                "subject": "other",
                                                "value": "carnivore"
                                            },
                                            {
                                                "test": "is_family",
                                                "subject": "other",
                                                "operator": "!=",
                                                "value": "pteranodon"
                                            }
                                        ]
                                    }
								]
                            },
                            {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:flesh_treat"
									},
									{
										"test": "is_riding",
										"subject": "other",
										"value": false
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": false
									}
								]
                            },
                            {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:flesh_treat"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": false
									}
								]
							}
                        ]
                    },
                    "event": "rift:adult_become_scared"
                }
			},
            "rift:pteranodon_adult_scared": {
				"minecraft:angry": {
					"broadcast_anger": true,
					"broadcast_range": 30,
					"broadcast_filters": {
						"test": "has_component",
						"subject": "other",
						"operator": "!=",
						"value": "minecraft:is_tamed"
					},
					"broadcast_targets": [
						"pteranodon"
					],
					"duration": 15,
					"calm_event": {
						"event": "rift:adult_on_calm",
						"target": "self"
					}
				},
                "minecraft:behavior.panic": {
					"priority": 14,
					"speed_multiplier": 3
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 15,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "mob"
									},
									{
										"test": "is_family",
										"subject": "other",
                                        "operator": "!=",
										"value": "pteranodon"
									}
								]
							},
							"max_dist": 16,
							"walk_speed_multiplier": 3,
							"sprint_speed_multiplier": 3
					  	}
					]
				}
            },
			"rift:aggravating_horn_attack": {
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 7,
					"within_radius": 32.0,
					"must_see": true,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "in_water",
										"subject": "other",
										"value": false
									},
									{
										"test": "has_component",
										"subject": "other",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "player"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "inanimate"
									}
								]
					  		},
							"max_dist": 48
						}
					]
				},
				"minecraft:on_target_escape": {
					"event": "rift:stop_being_aggravated",
				  	"target": "self"
				}
			},
            "rift:pteranodon_adult_wild_not_trusting": {
                "minecraft:trusting": {
                    "probability": 0.25,
                    "trust_event": {
                        "event": "rift:on_trust",
                        "target": "self"
                    },
                    "trust_items": [
                        "rift:fish_treat",
                        "rift:carrion_treat"
                    ]
                }            
            },
            "rift:pteranodon_adult_trusting": {
                "minecraft:trust": {}
			},
			"rift:pteranodon_adult_waiting_for_tame": {
				"minecraft:is_ignited": {},
				"minecraft:timer": {
					"time": 10,
					"time_down_event": {
						"event": "rift:can_be_tamed_again",
						"target": "self"
					}
				}
			},
			"rift:pteranodon_adult_chance_for_tame": {
				"minecraft:is_charged": {}
			},
			"rift:pteranodon_adult_tameable": {
				"minecraft:tameable": {
                    "probability": 1,
                    "tame_items": [
                        "rift:fish_treat",
                        "rift:carrion_treat"
                    ],
                    "tame_event": {
                        "event": "rift:adult_on_tame",
                        "target": "self"
                    }
                }
			},
            "rift:pteranodon_adult_tamed": {
                "minecraft:health": {
                    "value": 10,
                    "max": 12
                },
				"minecraft:behavior.delayed_attack": {
					"priority": 9,
					"reach_multiplier": 1.5,
					"attack_duration": 0.52,
					"hit_delay_pct": 0.46
				},
                "minecraft:breedable": {
                    "breeds_with": {
                        "mate_type": "rift:pteranodon",
                        "baby_type": "rift:egg",
                        "breed_event": {
                            "event": "rift:summon_pteranodon_egg",
                            "target": "baby"
                        }
                    },
                    "breed_items": [
                        "rift:fish_treat",
                        "rift:carrion_treat"
                    ],
                    "require_tame": true,
                    "inherit_tamed": true,
                    "breed_cooldown": 1200
                },
				"minecraft:healable": {
					"force_use": true,
					"items": [
						{
							"item": "minecraft:cod",
							"heal_amount": 1
						},
						{
							"item": "minecraft:cooked_cod",
							"heal_amount": 2
						},
						{
							"item": "minecraft:salmon",
							"heal_amount": 1
						},
						{
							"item": "minecraft:cooked_salmon",
							"heal_amount": 2
						},
						{
							"item": "minecraft:tropical_fish",
							"heal_amount": 1
						},
						{
							"item": "minecraft:rotten_flesh",
							"heal_amount": 1
						},
						{
							"item": "rift:raw_megapiranha",
							"heal_amount": 1
						},
						{
							"item": "rift:cooked_megapiranha",
							"heal_amount": 2
						},
						{
							"item": "rift:mixed_meat",
							"heal_amount": 20,
							"effects": [
								{
									"name": "absorption",
									"duration": 120,
									"amplifier": 0
								},
								{
									"name": "regeneration",
									"duration": 5,
									"amplifier": 1
								}
							]
						},
						{
							"item": "rift:enchanted_mixed_meat",
							"heal_amount": 20,
							"effects": [
								{
									"name": "absorption",
									"duration": 120,
									"amplifier": 3
								},
								{
									"name": "regeneration",
									"duration": 30,
									"amplifier": 1
								},
								{
									"name": "fire_resistance",
									"duration": 300,
									"amplifier": 0
								},
								{
									"name": "resistance",
									"duration": 300,
									"amplifier": 0
								}
							]
						}
					]
                },
				"minecraft:inventory": {
					"container_type": "horse",
					"inventory_size": 16,
					"restrict_to_owner": true,
					"private": false
                },
				"minecraft:equippable": {
					"slots": [
						{
							"slot": 0,
							"accepted_items": [
								"minecraft:saddle"
							],
							"item": "minecraft:saddle",
							"interact_text": "action.interact.saddle",
							"on_equip": {
								"event": "rift:attach_saddle",
								"target": "self"
							},
							"on_unequip": {
								"event": "rift:remove_saddle",
								"target": "self"
							}
						}
					]
				},
				"minecraft:behavior.player_ride_tamed": {}
            },
			"rift:pteranodon_saddled": {
				"minecraft:is_saddled": {},
				"minecraft:input_ground_controlled": {},
				"minecraft:can_power_jump": {},
				"minecraft:horse.jump_strength": {
					"value": {
						"range_min": 0,
						"range_max": 0
					}
				}
			},
			"rift:rideable": {
				"minecraft:rideable": {
					"seat_count": 2,
					"family_types": [
						"player",
                        "human",
						"pig",
						"sheep",
						"fox",
						"wolf",
						"cat",
						"fox",
						"turtle",
						"llama",
						"donkey",
						"bee",
						"ocelot",
						"strider",
						"turtle",
						"snowgolem",
						"zombie",
						"husk",
						"drowned",
						"skeleton",
						"stray",
						"creeper",
						"spider",
						"cavespider",
						"piglin",
						"zombie_pigman",
						"hoglin",
                        "dodo",
                        "coelophysis"
					],
					"seats": [
						{
							"position": [
								0,
								0.4,
								-0.2
							]
						},
                        {
                            "position": [
                                0, 
                                -0.5, 
                                -0.5
                            ]
                        }
					],
					"interact_text": "action.interact.mount"
				}
            },
			"rift:pteranodon_tamed": {
				"minecraft:is_tamed": {},
				"minecraft:leashable": {
					"soft_distance": 4,
					"hard_distance": 10,
					"max_distance": 16
				}
            },
            "rift:pteranodon_on_air": {
                "minecraft:can_fly": {},
                "minecraft:movement.fly": {},
                "minecraft:navigation.float": {
                    "can_path_over_water": true
                },
                "minecraft:behavior.float_wander": {
                    "must_reach": true,
                    "priority": 16
                }
            },
            "rift:pteranodon_on_land": {
                "minecraft:movement.basic": {},
                "minecraft:navigation.walk": {
                    "can_path_over_water": false,
                    "avoid_water": true,
                    "can_path_from_air": false
                },
                "minecraft:behavior.random_stroll": {
					"priority": 16
				}
            },
            "rift:pteranodon_on_air_hypnotized": {
                "minecraft:can_fly": {},
                "minecraft:movement.hover": {},
                "minecraft:navigation.hover": {
                    "avoid_damage_blocks": true,
                    "avoid_sun": false,
                    "avoid_water": true,
                    "can_pass_doors": false,
                    "can_path_from_air": true,
                    "can_path_over_water": true,
                    "can_sink": false
                }
            },
            "rift:pteranodon_on_land_tamed": {
                "minecraft:movement.basic": {},
                "minecraft:navigation.walk": {
                    "can_path_over_water": false,
                    "avoid_water": true,
                    "can_path_from_air": false
                }
			},
            "rift:pteranodon_on_air_not_landing": {
                "minecraft:timer": {
                    "time": 180,
                    "time_down_event": {
                        "event": "rift:start_landing_procedure",
                        "target": "self"
                    }
                }
            },
            "rift:pteranadon_on_air_landing": {
                "minecraft:is_sheared": {}
            },
            "rift:pteranodon_on_land_has_landed": {
                "minecraft:timer": {
                    "time": 90,
                    "time_down_event": {
                        "event": "rift:start_flying_procedure",
                        "target": "self"
                    }
                }
            },
			"rift:temptable": {
                "minecraft:behavior.tempt": {
                    "priority": 13,
					"within_radius": 16,
                    "items": [
                        "minecraft:cod",
                        "minecraft:cooked_cod",
                        "minecraft:salmon",
                        "minecraft:cooked_salmon",
                        "minecraft:tropical_fish",
                        "minecraft:rotten_flesh",
						"rift:raw_megapiranha",
						"rift:cooked_megapiranha",
                        "rift:carrion_treat",
                        "rift:fish_treat"
                    ]
                }
			},
			"rift:wild_standing": {
				"minecraft:behavior.random_look_around": {
					"priority": 17
				},
				"minecraft:movement": {
					"value": 0.15
				},
                "minecraft:flying_speed": {
                    "value": 0.35
                }
			},
			"rift:wild_standing_hypnotized_by_tenontosaurus": {
				"minecraft:movement": {
					"value": 0.15
				},
                "minecraft:flying_speed": {
                    "value": 0.35
                }
			},
            "rift:follow_tenontosaurus": {
				"minecraft:behavior.nearest_prioritized_attackable_target": {
					"priority": 7,
					"within_radius": 32.0,
					"entity_types": [
						{
							"filters": {
                                "test": "has_tag",
                                "subject": "other",
                                "value": "tenontoTarget"
                            },
							"max_dist": 48,
							"priority": 0
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "tenontosaurus"
									},
									{
										"test": "has_component",
										"subject": "other",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									}
								]
							},
							"max_dist": 48,
							"priority": 1
						}
					]
				}
			},
			"rift:follow_tenontosaurus_no_target": {
				"minecraft:behavior.ranged_attack": {
					"priority": 16,
					"attack_radius": 8.0,
					"attack_radius_min": 4
				},
				"minecraft:on_target_acquired": {
					"filters": {
						"all_of": [
							{
								"test": "has_component",
								"subject": "target",
								"operator": "!=",
								"value": "minecraft:is_tamed"
							},
							{
								"test": "is_family",
								"subject": "target",
								"operator": "!=",
								"value": "tenontosaurus"
							}
						]
					},
					"event": "rift:attack_for_tenontosaurus",
					"target": "self"
				}
			},
			"rift:follow_tamed_tenontosaurus": {
				"minecraft:behavior.nearest_prioritized_attackable_target": {
					"priority": 7,
					"within_radius": 32.0,
					"entity_types": [
						{
							"filters": {
                                "test": "has_tag",
                                "subject": "other",
                                "value": "tenontoTamedTarget"
                            },
							"max_dist": 48,
							"priority": 0
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"value": "tenontosaurus"
									},
									{
										"test": "has_component",
										"subject": "other",
										"value": "minecraft:is_tamed"
									}
								]
							},
							"max_dist": 48,
							"priority": 1
						}
					]
				}
			},
			"rift:follow_tamed_tenontosaurus_no_target": {
				"minecraft:behavior.ranged_attack": {
					"priority": 16,
					"attack_radius": 8.0,
					"attack_radius_min": 4
				},
				"minecraft:on_target_acquired": {
					"filters": {
                        "test": "has_tag",
                        "subject": "target",
                        "value": "tenontoTamedTarget"
                    },
					"event": "rift:attack_for_tenontosaurus",
					"target": "self"
				}
			},
			"rift:attacking_for_tenontosaurus": {
				"minecraft:behavior.delayed_attack": {
					"priority": 9,
					"reach_multiplier": 1.5,
					"attack_duration": 0.52,
					"hit_delay_pct": 0.46
				},
				"minecraft:on_target_escape": {
					"event": "rift:stop_attacking_for_tenontosaurus",
					"target": "self"
				}
			},
			"rift:tamed_standing": {
				"minecraft:behavior.breed": {
					"priority": 1
				},
				"minecraft:behavior.follow_owner": {
					"priority": 10,
					"start_distance": 8,
					"stop_distance": 40
				}
			},
			"rift:sitting": {
				"minecraft:on_target_acquired": {
					"event": "rift:sitting_on_anger",
					"target": "self"
				}
			},
			"rift:sitting_angered": {
				"minecraft:on_target_escape": {
					"event": "rift:sitting_on_calm",
				  	"target": "self"
				}
			},
			"rift:wandering": {
				"minecraft:behavior.breed": {
					"priority": 1
				},
                "minecraft:behavior.random_stroll": {
					"priority": 16
				}
			},
			"rift:tamed_can_move": {
				"minecraft:movement": {
					"value": 0.15
				},
                "minecraft:flying_speed": {
                    "value": 0.35
                }
			},
			"rift:tamed_can_move_low_energy": { //formula for speed reduction from slowness effect is speed * 0.15 * level
				"minecraft:movement": {
					"value": 0.0675
				},
                "minecraft:flying_speed": {
                    "value": 0.1575
                }
			},
			"rift:tamed_cannot_move": {
				"minecraft:movement": {
					"value": 0
				},
				"minecraft:underwater_movement": {
					"value": 0
				},
				"minecraft:water_movement": {
					"drag_factor": 0
				}
			},
			"rift:assist_behavior": {
				"minecraft:behavior.owner_hurt_by_target": {
					"priority": 4
				},
				"minecraft:behavior.owner_hurt_target": {
					"priority": 5
				}
			},
			"rift:neutral_behavior": {
				"minecraft:behavior.hurt_by_target": {
					"priority": 6,
					"entity_types": {
						"filters": {
							"test": "has_component",
							"subject": "self",
							"operator": "!=",
							"value": "minecraft:is_baby"
						}
					}
				}
			},
			"rift:aggressive_behavior": {
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 7,
					"within_radius": 32.0,
					"must_see": true,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test": "in_water",
										"subject": "other",
										"value": false
									},
									{
										"test": "has_component",
										"subject": "other",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "player"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "inanimate"
									}
								]
					  		},
							"max_dist": 48
						}
					]
				},
				"minecraft:behavior.hurt_by_target": {
					"priority": 6,
					"entity_types": {
						"filters": {
							"test": "has_component",
							"subject": "self",
							"operator": "!=",
							"value": "minecraft:is_baby"
						}
					}
				}
			},
            "rift:variant_one": {
                "minecraft:variant": {
                    "value": 0
                }
            },
            "rift:variant_two": {
                "minecraft:variant": {
                    "value": 1
                }
            },
            "rift:variant_three": {
                "minecraft:variant": {
                    "value": 2
                }
            },
            "rift:variant_four": {
                "minecraft:variant": {
                    "value": 3
                }
            },
			"rift:pushable": {
				"minecraft:pushable": {
					"is_pushable": true,
					"is_pushable_by_piston": true
				}
			},
			"rift:unpushable": {
				"minecraft:pushable": {
					"is_pushable": false,
					"is_pushable_by_piston": false
				}
			},
            "rift:has_gravity": {
                "minecraft:physics": {
                    "has_gravity": true
                }
            },
            "rift:has_no_gravity": {
                "minecraft:physics": {
                    "has_gravity": false
                }
            },
			"rift:transform_into_hypnotized": {
				"minecraft:transformation": {
					"into": "rift:pteranodon<rift:transform_into_hypnotized>"
				}
			},
			"rift:transform_into_hypnotized_by_tamed": {
				"minecraft:transformation": {
					"into": "rift:pteranodon<rift:transform_into_hypnotized_by_tamed>"
				}
			}
        },
        "components": {
            "minecraft:type_family": {
				"family": [
					"riftCreature",
					"pteranodon",
					"mob",
					"carnivore",
					"reptile",
                    "mediumSize"
				]
			},
            "minecraft:jump.static": {},
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:nameable": {},
			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0
			},
			"minecraft:interact": {
				"interactions": [
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
                                        "any_of": [
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:fish_treat"
                                            },
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:carrion_treat"
                                            }
                                        ]
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby"
									}
								]
							},
							"event": "rift:lol2",
							"target": "self"
						},
						"interact_text": "action.interact.tame"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
                                        "any_of": [
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:fish_treat"
                                            },
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:carrion_treat"
                                            }
                                        ]
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"any_of": [
											{
												"test": "is_missing_health",
												"subject": "self",
												"value": true
											},
											{
												"test": "has_tag",
												"subject": "self",
												"value": "inLove"
											}
										]
									}
								]
							},
							"event": "rift:lol2",
							"target": "self"
						},
						"interact_text": "action.interact.tame"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
                                    {
                                        "any_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cod"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cooked_cod"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:salmon"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cooked_salmon"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:tropical_fish"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:rotten_flesh"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:raw_megapiranha"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:cooked_megapiranha"
											}
                                        ]
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "is_missing_health",
										"subject": "self",
										"value": false
									}
								]
							},
							"event": "rift:lol3",
							"target": "self"
						},
						"interact_text": "action.interact.tame"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
                                    {
                                        "any_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cod"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cooked_cod"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:salmon"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:cooked_salmon"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:tropical_fish"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:rotten_flesh"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:raw_megapiranha"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:cooked_megapiranha"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:raw_fibrous_meat"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:cooked_fibrous_meat"
											}
                                        ]
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									}
								]
							},
							"event": "rift:lol3",
							"target": "self"
						},
						"interact_text": "action.interact.tame"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:command_staff"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "minecraft:chest"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:euthanasia"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "minecraft:potion"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:fish_treat"
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"operator": "!=",
										"value": "rift:carrion_treat"
									},
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "operator": "!=",
                                        "value": "rift:raw_fibrous_meat"
                                    },
                                    {
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "operator": "!=",
                                        "value": "rift:cooked_fibrous_meat"
                                    }
								]
							},
							"event": "rift:manage_state",
							"target": "self"
						}
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:command_staff"
									}
								]
							},
							"event": "rift:manage_behavior",
							"target": "self"
						}
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "rift:raw_fibrous_meat"
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									},
                                    {
                                        "test": "int_property",
                                        "subject": "self",
                                        "domain": "rift:energy",
                                        "operator": "<",
                                        "value": 450
                                    }
								]
							},
							"event": "rift:regenerate_energy_from_raw_food",
							"target": "self"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
                                        "test": "has_equipment",
                                        "subject": "other",
                                        "domain": "hand",
                                        "value": "rift:cooked_fibrous_meat"
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									},
                                    {
                                        "test": "int_property",
                                        "subject": "self",
                                        "domain": "rift:energy",
                                        "operator": "<",
                                        "value": 450
                                    }
								]
							},
							"event": "rift:regenerate_energy_from_cooked_food",
							"target": "self"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
                                        "any_of": [
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:raw_fibrous_meat"
                                            },
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:cooked_fibrous_meat"
                                            }
                                        ]
                                    },
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									},
                                    {
                                        "test": "int_property",
                                        "subject": "self",
                                        "domain": "rift:energy",
                                        "value": 450
                                    }
								]
							},
							"event": "rift:lol4",
							"target": "self"
						}
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_charged"
									},
									{
                                        "any_of": [
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:fish_treat"
                                            },
                                            {
                                                "test": "has_equipment",
                                                "subject": "other",
                                                "domain": "hand",
                                                "value": "rift:carrion_treat"
                                            }
                                        ]
                                    }
								]
							},
							"event": "rift:adult_failed_tame",
							"target": "self"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:euthanasia"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:commit_suicide",
							"target": "self"
						},
						"use_item": true
					},
					//for drinking potions
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:0"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							}
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:1"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							}
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:2"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							}
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:3"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							}
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:4"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							}
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:5"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_night_vision_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:6"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_night_vision_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:7"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_invisibility_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:8"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_invisibility_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:9"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_leaping_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:10"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_leaping_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:11"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_leaping_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:12"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_fire_resistance_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:13"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_fire_resistance_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:14"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_swiftness_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:15"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_swiftness_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:16"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_swiftness_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:17"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_slowness_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:18"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_slowness_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:19"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_water_breathing_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:20"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_water_breathing_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:21"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_healing_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:22"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_healing_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:23"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_harming_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:24"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_harming_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:25"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_poison_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:26"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_poison_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:27"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_poison_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:28"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_regeneration_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:29"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_regeneration_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:30"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_regeneration_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:31"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_strength_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:32"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_strength_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:33"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_strength_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:34"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_weakness_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:35"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_weakness_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:36"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_decay_potion",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:37"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_turtle_master_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:38"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_turtle_master_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:39"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_turtle_master_potion_three",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:40"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_slow_falling_potion_one",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:potion:41"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_slow_falling_potion_two",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:glass_bottle"
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "minecraft:milk_bucket"
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:drink_milk",
							"target": "self"
						},
						"use_item": true,
						"play_sounds": "random.drink",
						"transform_to_item": "minecraft:bucket"
					}
				]
            },
            "minecraft:scheduler": {
				"scheduled_events": [
					{
						"filters": {
							"all_of": [
								{
									"test": "rider_count",
									"subject": "self",
									"operator": ">",
									"value": 0
								},
								{
									"test": "has_component",
									"subject": "self",
									"value": "minecraft:is_tamed"
								}
							]
						},
						"event": "rift:cannot_sit"
					},
					{
						"filters": {
							"all_of": [
								{
									"test": "rider_count",
									"subject": "self",
									"operator": "==",
									"value": 0
								},
								{
									"test": "has_component",
									"subject": "self",
									"value": "minecraft:is_tamed"
								}
							]
						},
						"event": "rift:can_sit"
					}
                ]
            },
			"minecraft:damage_sensor": {
                "triggers": [
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:trust"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_family",
										"subject": "other",
										"value": "player"
									}
								]
							},
							"event": "rift:reset_taming_progress",
							"target": "self"
						}
					},
					{
						"deals_damage": false,
						"cause": "fall"
					},
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									}
								]
							}
						},
						"deals_damage": false
					}
                ]
            },
            "minecraft:behavior.float": {}
        },
        "events": {
            "minecraft:entity_spawned": {
                "randomize": [
                    {
                        "weight": 3,
                        "randomize": [
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_air",
                                        "rift:pteranodon_on_air_not_landing",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_one",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_air",
                                        "rift:pteranodon_on_air_not_landing",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_two",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_air",
                                        "rift:pteranodon_on_air_not_landing",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_three",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_air",
                                        "rift:pteranodon_on_air_not_landing",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_four",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            }
                        ]
                    },
                    {
                        "weight": 1,
                        "randomize": [
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_land",
                                        "rift:pteranodon_on_land_has_landed",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_one",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_land",
                                        "rift:pteranodon_on_land_has_landed",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_two",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_land",
                                        "rift:pteranodon_on_land_has_landed",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_three",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            },
                            {
                                "weight": 1,
                                "add": {
                                    "component_groups": [
                                        "rift:pteranodon_adult",
                                        "rift:pteranodon_adult_wild",
                                        "rift:pteranodon_adult_calm",
                                        "rift:pteranodon_on_land",
                                        "rift:pteranodon_on_land_has_landed",
                                        "rift:pteranodon_adult_wild_not_trusting",
                                        "rift:variant_four",
                                        "rift:wild_standing",
                                        "rift:pushable",
                                        "rift:has_gravity"
                                    ]
                                }
                            }
                        ]
                    }
                ]
            },
            "rift:spawn_hypnotized_by_tenontosaurus": {
                "randomize": [
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_one",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_two",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_three",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_four",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    }
                ]
            },
			"rift:attack_for_tenontosaurus": {
				"add": {
					"component_groups": [
						"rift:attacking_for_tenontosaurus"
					]
				},
				"remove": {
					"component_groups": [
						"rift:follow_tenontosaurus_no_target",
                        "rift:follow_tamed_tenontosaurus_no_target"
					]
				}
			},
			"rift:stop_attacking_for_tenontosaurus": {
                "sequence": [
                    {
                        "remove": {
                            "component_groups": [
                                "rift:attacking_for_tenontosaurus"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "bool_property",
                                    "subject": "self",
                                    "domain": "rift:is_hypnotized",
                                    "value": true
                                },
                                {
                                    "test": "bool_property",
                                    "subject": "self",
                                    "domain": "rift:is_hypnotized_tamed",
                                    "value": false
                                }
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "rift:follow_tenontosaurus_no_target"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "all_of": [
                                {
                                    "test": "bool_property",
                                    "subject": "self",
                                    "domain": "rift:is_hypnotized",
                                    "value": false
                                },
                                {
                                    "test": "bool_property",
                                    "subject": "self",
                                    "domain": "rift:is_hypnotized_tamed",
                                    "value": true
                                }
                            ]
                        },
                        "add": {
                            "component_groups": [
                                "rift:follow_tamed_tenontosaurus_no_target"
                            ]
                        }
                    }
                ]
            },
            "rift:hypnotized_by_tenontosaurus": {
                "add": {
                    "component_groups": [
                        "rift:transform_into_hypnotized"
                    ]
                }
            },
            "rift:transform_into_hypnotized": {
                "sequence": [
                    {},
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_one",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_two",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_three",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_four",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tenontosaurus",
								"rift:follow_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized": true
						}
                    }
                ]
            },
            "rift:hypnotized_by_tamed_tenontosaurus": {
                "add": {
                    "component_groups": [
                        "rift:transform_into_hypnotized_by_tamed"
                    ]
                }
            },
            "rift:transform_into_hypnotized_by_tamed": {
                "sequence": [
                    {},
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 0
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_one",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tamed_tenontosaurus",
								"rift:follow_tamed_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized_tamed": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 1
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_two",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tamed_tenontosaurus",
								"rift:follow_tamed_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized_tamed": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 2
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_three",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tamed_tenontosaurus",
								"rift:follow_tamed_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized_tamed": true
						}
                    },
                    {
                        "filters": {
                            "test": "is_variant",
                            "subject": "other",
                            "value": 3
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_hypnotized",
                                "rift:pteranodon_on_air_hypnotized",
                                "rift:variant_four",
                                "rift:wild_standing_hypnotized_by_tenontosaurus",
                                "rift:pushable",
                                "rift:has_gravity",
								"rift:follow_tamed_tenontosaurus",
								"rift:follow_tamed_tenontosaurus_no_target"
                            ]
                        },
						"set_property": {
							"rift:is_hypnotized_tamed": true
						}
                    }
                ]
            },
            "rift:spawn_as_baby": {
                "randomize": [
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_wild",
                                "rift:pteranodon_baby_calm",
                                "rift:pteranodon_on_land",
                                "rift:temptable",
                                "rift:variant_one",
                                "rift:wild_standing",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_wild",
                                "rift:pteranodon_baby_calm",
                                "rift:pteranodon_on_land",
                                "rift:temptable",
                                "rift:variant_two",
                                "rift:wild_standing",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_wild",
                                "rift:pteranodon_baby_calm",
                                "rift:pteranodon_on_land",
                                "rift:temptable",
                                "rift:variant_three",
                                "rift:wild_standing",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_wild",
                                "rift:pteranodon_baby_calm",
                                "rift:pteranodon_on_land",
                                "rift:temptable",
                                "rift:variant_four",
                                "rift:wild_standing",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        }
                    }
                ]
            },
            "rift:hatched_from_egg": {
                "randomize": [
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_tamed",
                                "rift:pteranodon_tamed",
                                "rift:tamed_can_move",
                                "rift:pteranodon_on_land_tamed",
                                "rift:temptable",
                                "rift:variant_one",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        },
                        "set_property": {
                            "rift:behavior_state": "3"
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_tamed",
                                "rift:pteranodon_tamed",
                                "rift:tamed_can_move",
                                "rift:pteranodon_on_land_tamed",
                                "rift:temptable",
                                "rift:variant_two",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        },
                        "set_property": {
                            "rift:behavior_state": "3"
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_tamed",
                                "rift:pteranodon_tamed",
                                "rift:tamed_can_move",
                                "rift:pteranodon_on_land_tamed",
                                "rift:temptable",
                                "rift:variant_three",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        },
                        "set_property": {
                            "rift:behavior_state": "3"
                        }
                    },
                    {
                        "weight": 1,
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_tamed",
                                "rift:pteranodon_tamed",
                                "rift:tamed_can_move",
                                "rift:pteranodon_on_land_tamed",
                                "rift:temptable",
                                "rift:variant_four",
                                "rift:pushable",
                                "rift:has_gravity"
                            ]
                        },
                        "set_property": {
                            "rift:behavior_state": "3"
                        }
                    }
                ]
            },
            "rift:adult_become_scared": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_adult_scared",
                        "rift:pteranodon_on_air"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_adult_calm",
                        "rift:pteranodon_on_land",
                        "rift:pteranodon_on_land_has_landed",
                        "rift:pteranadon_on_air_landing"
                    ]
                }
            },
            "rift:adult_on_calm": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_adult_calm",
                        "rift:pteranodon_on_air_not_landing"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_adult_scared"
                    ]
                }
            },
            "rift:start_landing_procedure": {
                "add": {
                    "component_groups": [
                        "rift:pteranadon_on_air_landing",
                        "rift:pteranodon_on_land"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_on_air_not_landing",
                        "rift:pteranodon_on_air"
                    ]
                }
            },
            "rift:on_landed": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_on_land_has_landed"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranadon_on_air_landing"
                    ]
                }
            },
            "rift:start_flying_again": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_on_air_not_landing",
                        "rift:pteranodon_on_air"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranadon_on_air_landing",
                        "rift:pteranodon_on_land"
                    ]
                }
            },
            "rift:start_flying_procedure": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_on_air",
                        "rift:pteranodon_on_air_not_landing"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_on_land",
                        "rift:pteranodon_on_land_has_landed"
                    ]
                }
            },
            "rift:baby_become_scared": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_baby_scared"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_baby_calm"
                    ]
                }
            },
            "rift:baby_on_calm": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_baby_calm"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:pteranodon_baby_scared"
                    ]
                }
            },
            "rift:baby_grow_up": {
                "sequence": [
                    {
                        "add": {
                            "component_groups": [
                                "rift:pteranodon_adult",
                                "rift:pteranodon_adult_wild",
                                "rift:pteranodon_adult_calm",
                                "rift:pteranodon_on_land_has_landed"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "rift:pteranodon_baby",
                                "rift:pteranodon_baby_wild",
                                "rift:pteranodon_baby_calm",
                                "rift:pteranodon_baby_scared",
                                "rift:temptable"
                            ]
                        }
                    },
                    {
                        "filters": {
                            "test": "has_component",
                            "subject": "self",
                            "value": "minecraft:is_tamed"
                        },
                        "add": {
                            "component_groups": [
                                "rift:pteranadon_adult_tamed",
                                "rift:rideable",
                                "rift:pteranodon_on_air_tamed"
                            ]
                        },
                        "remove": {
                            "component_groups": [
                                "rift:pteranodon_adult_wild",
                                "rift:pteranodon_adult_calm",
                                "rift:pteranodon_adult_scared",
                                "rift:pteranodon_on_land",
                                "rift:pteranodon_on_land_has_landed"
                            ]
                        }
                    }
                ]
            },
            "rift:on_tame": {
                "add": {
                    "component_groups": [
                        "rift:pteranodon_baby_tamed",
                        "rift:pteranodon_tamed",
                        "rift:tamed_can_move",
                        "rift:pteranodon_on_land_tamed"
                    ]
                },
                "remove": {
                    "component_groups": [
						"rift:pteranodon_baby_wild",
						"rift:pteranodon_baby_calm",
						"rift:pteranodon_baby_scared",
						"rift:wild_standing",
                        "rift:pteranodon_on_land"
                    ]
                },
				"set_property": {
					"rift:behavior_state": "3"
				}
            },
			"rift:on_trust": {
				"add": {
					"component_groups": [
						"rift:pteranodon_adult_trusting",
						"rift:pteranodon_adult_waiting_for_tame",
						"rift:temptable",
                        "rift:pteranodon_on_land"
					]
				},
				"remove": {
					"component_groups": [
						"rift:pteranodon_adult_wild_not_trusting",
						"rift:pteranodon_adult_calm",
						"rift:pteranodon_adult_scared",
                        "rift:pteranodon_on_air",
                        "rift:pteranodon_on_air_not_landing",
                        "rift:pteranadon_on_air_landing",
                        "rift:pteranodon_on_land_has_landed"
					]
				},
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"text\":\"You made a wild Pteranodon trust you! Keep feeding it every once in a while to eventually tame it!\"}]}"
					]
				},
				"set_property": {
					"rift:undergoing_taming": true
				}
			},
			"rift:reset_taming_progress": {
				"add": {
					"component_groups": [
						"rift:pteranodon_adult_wild_not_trusting",
						"rift:pteranodon_adult_calm",
                        "rift:pteranodon_on_land_has_landed"
					]
				},
				"remove": {
					"component_groups": [
						"rift:pteranodon_adult_trusting",
						"rift:pteranodon_adult_waiting_for_tame",
						"rift:temptable",
						"rift:pteranodon_adult_chance_for_tame",
						"rift:pteranodon_adult_tameable"
					]
				},
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"text\":\"Your taming progress has been reset!\"}]}"
					]
				},
				"set_property": {
					"rift:undergoing_taming": false
				}
			},
			"rift:can_be_tamed_again": {
				"randomize": [
					{
						"weight": 70,
						"add": {
							"component_groups": [
								"rift:pteranodon_adult_chance_for_tame"
							]
						},
						"remove": {
							"component_groups": [
								"rift:pteranodon_adult_waiting_for_tame"
							]
						}
					},
					{
						"weight": 30,
						"add": {
							"component_groups": [
								"rift:pteranodon_adult_tameable"
							]
						},
						"remove": {
							"component_groups": [
								"rift:pteranodon_adult_waiting_for_tame"
							]
						}
					}
				]
			},
			"rift:adult_failed_tame": {
				"add": {
					"component_groups": [
						"rift:pteranodon_adult_waiting_for_tame"
					]
				},
				"remove": {
					"component_groups": [
						"rift:pteranodon_adult_chance_for_tame"
					]
				},
				"run_command": {
					"command": [
						"playsound random.eat @a[r=4]"
					]
				}
			},
			"rift:adult_on_tame": {
				"add": {
					"component_groups": [
						"rift:pteranodon_tamed",
						"rift:pteranodon_adult_tamed",
						"rift:tamed_standing",
						"rift:rideable",
						"rift:tamed_can_move",
                        "rift:pteranodon_on_land_tamed"
					]
				},
				"remove": {
					"component_groups": [
						"rift:pteranodon_adult_wild",
						"rift:pteranodon_adult_waiting_for_tame",
						"rift:pteranodon_adult_tameable",
						"rift:pteranodon_adult_chance_for_tame",
						"rift:pteranodon_adult_trusting",
						"rift:wild_standing",
						"rift:temptable",
                        "rift:pteranodon_on_land"
					]
				},
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"text\":\"You have succesfully tamed a Pteranodon!\"}]}"
					]
				},
				"set_property": {
					"rift:undergoing_taming": false
				}
			},
			"rift:attach_saddle": {
				"add": {
					"component_groups": [
						"rift:pteranodon_saddled"
					]
				}
			},
			"rift:remove_saddle": {
				"remove": {
					"component_groups": [
						"rift:pteranodon_saddled"
					]
				}
            },
			"rift:cannot_sit": {
				"add": {
					"component_groups": [
						"rift:unpushable"
					]
				},
				"remove": {
					"component_groups": [
						"rift:pushable",
						"rift:aggravating_horn_attack"
					]
				},
				"run_command": {
					"command": [
						"tag @s add flyingMountHasRider"
					]
				}
			},
			"rift:can_sit": {
				"add": {
					"component_groups": [
						"rift:pushable",
                        "rift:has_gravity"
					]
				},
				"remove": {
					"component_groups": [
						"rift:unpushable",
                        "rift:has_no_gravity"
					]
				},
				"run_command": {
					"command": [
						"tag @s remove flyingMountHasRider"
					]
				}
			},
            "rift:hover_to_fly": {
                "add": {
                    "component_groups": [
                        "rift:has_gravity"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:has_no_gravity"
                    ]
                }
            },
            "rift:fly_to_hover": {
                "add": {
                    "component_groups": [
                        "rift:has_no_gravity"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:has_gravity"
                    ]
                }
            },
			"rift:commit_suicide": {
				"run_command": {
					"command": [
						"kill @s"
					]
				}
			},
			"rift:start_forced_attack": {
				"set_property": {
					"rift:is_forced_attacking": true
				}
			},
			"rift:stop_forced_attack": {
				"set_property": {
					"rift:is_forced_attacking": false
				}
			},
            "rift:using_forced_attack": {},
            "rift:eat_from_inventory": {},
            "rift:refill_energy_from_inventory": {},
            "rift:manage_carrying": {
                "sequence": [
                    {},
                    {
                        "filters": {
                            "test": "rider_count",
                            "subject": "self",
                            "operator": "==",
                            "value": 1
                        },
                        "run_command": {
                            "command": [
                                "ride @e[type=!player, r=4] start_riding @s"
                            ]
                        },
                        "set_property": {
                            "rift:energy": "query.property('rift:energy') - 5"
                        }
                    },
                    {
                        "filters": {
                            "test": "rider_count",
                            "subject": "self",
                            "operator": ">",
                            "value": 1
                        },
                        "run_command": {
                            "command": [
                                "ride @e[type=!player, r=4] stop_riding"
                            ]
                        }
                    }
                ]
            },
			"rift:on_standing": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"rift:tamed_standing"
							]
						},
						"remove": {
							"component_groups": [
								"rift:wild_standing",
								"rift:sitting",
								"rift:sitting_angered",
								"rift:wandering"
							]
						},
						"run_command": {
							"command": [
								"tag @s remove sitting"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"subject": "self",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": [
								"rift:temptable"
							]
						}
					}
				]
			},
			"rift:on_sitting": {
                "add": {
                    "component_groups": [
                        "rift:sitting"
                    ]
                },
                "remove": {
                    "component_groups": [
                        "rift:wild_standing",
                        "rift:tamed_standing",
                        "rift:sitting_angered",
                        "rift:wandering",
                        "rift:temptable"
                    ]
                },
                "run_command": {
                    "command": [
                        "tag @s add sitting"
                    ]
                }
            },
			"rift:on_wandering": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"rift:wandering"
							]
						},
						"remove": {
							"component_groups": [
								"rift:wild_standing",
								"rift:tamed_standing",
								"rift:sitting",
								"rift:sitting_angered"
							]
						},
						"run_command": {
							"command": [
								"tag @s remove sitting"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"subject": "self",
							"value": "minecraft:is_baby"
						},
						"add": {
							"component_groups": [
								"rift:temptable"
							]
						}
					}
				]
			},
			"rift:sitting_on_anger": {
				"add": {
					"component_groups": [
						"rift:sitting_angered"
					]
				},
				"remove": {
					"component_groups": [
						"rift:sitting"
					]
				}
			},
			"rift:sitting_on_calm": {
				"add": {
					"component_groups": [
						"rift:sitting"
					]
				},
				"remove": {
					"component_groups": [
						"rift:sitting_angered"
					]
				}
			},
			"rift:on_assist_behavior": {
				"add": {
					"component_groups": [
						"rift:assist_behavior"
					]
				},
				"remove": {
					"component_groups": [
						"rift:neutral_behavior",
						"rift:aggressive_behavior"
					]
				},
				"run_command": {
					"command": [
						"tag @s remove hunting"
					]
				}
			},
			"rift:on_neutral_behavior": {
				"add": {
					"component_groups": [
						"rift:neutral_behavior"
					]
				},
				"remove": {
					"component_groups": [
						"rift:assist_behavior",
						"rift:aggressive_behavior"
					]
				},
				"run_command": {
					"command": [
						"tag @s remove hunting"
					]
				}
			},
			"rift:on_aggressive_behavior": {
				"add": {
					"component_groups": [
						"rift:aggressive_behavior"
					]
				},
				"remove": {
					"component_groups": [
						"rift:assist_behavior",
						"rift:neutral_behavior"
					]
				},
				"run_command": {
					"command": [
						"tag @s add hunting"
					]
				}
			},
			"rift:on_passive_behavior": {
				"remove": {
					"component_groups": [
						"rift:assist_behavior",
						"rift:neutral_behavior",
						"rift:aggressive_behavior"
					]
				},
				"run_command": {
					"command": [
						"tag @s remove hunting"
					]
				}
			},
			"rift:aggravated_via_aggravating_horn": {
				"add": {
					"component_groups": [
						"rift:aggravating_horn_attack"
					]
				}
			},
			"rift:stop_being_aggravated": {
				"remove": {
					"component_groups": [
						"rift:aggravating_horn_attack"
					]
				}
			},
			"rift:moving_slowly_low_energy": {
				"add": {
					"component_groups": [
						"rift:tamed_can_move_low_energy"
					]
				},
				"remove": {
					"component_groups": [
						"rift:tamed_can_move",
						"rift:tamed_cannot_move"
					]
				}
			},
			"rift:stop_moving_low_energy": {
				"add": {
					"component_groups": [
						"rift:tamed_cannot_move"
					]
				},
				"remove": {
					"component_groups": [
						"rift:tamed_can_move",
						"rift:tamed_can_move_low_energy"
					]
				}
			},
			"rift:return_to_moving_normally": {
				"add": {
					"component_groups": [
						"rift:tamed_can_move"
					]
				},
				"remove": {
					"component_groups": [
						"rift:tamed_cannot_move",
						"rift:tamed_can_move_low_energy"
					]
				}
			},
			"rift:manage_state": {
				"sequence": [
					{},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:tame_state",
							"value": 0
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.state_sitting.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:tame_state",
							"value": 1
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.state_wandering.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:tame_state",
							"value": 2
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.state_standing.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"set_property": {
							"rift:tame_state": "query.property('rift:energy') > 0 ? ((query.property('rift:tame_state') >= 0 && query.property('rift:tame_state') <= 1) ? query.property('rift:tame_state') + 1 : 0) : 1"
						}
					}
				]
			},
			"rift:manage_behavior": {
				"sequence": [
					{},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:behavior_state",
							"value": 0
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.behavior_neutral.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:behavior_state",
							"value": 1
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.behavior_aggressive.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:behavior_state",
							"value": 2
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.behavior_passive.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"filters": {
							"test": "int_property",
							"subject": "self",
							"domain": "rift:behavior_state",
							"value": 3
						},
						"run_command": {
							"command": [
								"tellraw @a {\"rawtext\":[{\"translate\":\"reminder.behavior_assist.text\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}]}"
							]
						}
					},
					{
						"set_property": {
							"rift:behavior_state": "query.property('rift:energy') > 0 ? ((query.property('rift:behavior_state') >= 0 && query.property('rift:behavior_state') <= 2) ? query.property('rift:behavior_state') + 1 : 0) : 3"
						}
					}
				]
			},
			"rift:sit_at_no_energy": {
				"set_property": {
					"rift:tame_state": "1"
				}
			},
			"rift:passive_at_no_energy": {
				"set_property": {
					"rift:behavior_state": "3"
				}
			},
            "rift:decrease_energy_while_moving": {
				"set_property": {
					"rift:energy": "query.property('rift:energy') - 15"
				}
			},
			"rift:decrease_energy_while_attacking": {
				"set_property": {
					"rift:energy": "query.property('rift:energy') - 10"
				}
			},
			"rift:regenerate_energy": {
				"set_property": {
					"rift:energy": "query.property('rift:energy') + 10"
				}
			},
			"rift:regenerate_energy_from_raw_food": {
				"set_property": {
					"rift:energy": "query.property('rift:energy') + 15"
				},
				"run_command": {
					"command": [
						"playsound random.eat @a[r=4]"
					]
				}
			},
			"rift:regenerate_energy_from_cooked_food": {
				"set_property": {
					"rift:energy": "query.property('rift:energy') + 30"
				},
				"run_command": {
					"command": [
						"playsound random.eat @a[r=4]"
					]
				}
			},
			//for potion effects
			"rift:drink_night_vision_potion_one": {
				"run_command": {
					"command": [
						"effect @s night_vision 180"
					]
				}
			},
			"rift:drink_night_vision_potion_two": {
				"run_command": {
					"command": [
						"effect @s night_vision 480"
					]
				}
			},
			"rift:drink_invisibility_potion_one": {
				"run_command": {
					"command": [
						"effect @s invisibility 180"
					]
				}
			},
			"rift:drink_invisibility_potion_two": {
				"run_command": {
					"command": [
						"effect @s invisibility 480"
					]
				}
			},
			"rift:drink_leaping_potion_one": {
				"run_command": {
					"command": [
						"effect @s jump_boost 180"
					]
				}
			},
			"rift:drink_leaping_potion_two": {
				"run_command": {
					"command": [
						"effect @s jump_boost 480"
					]
				}
			},
			"rift:drink_leaping_potion_three": {
				"run_command": {
					"command": [
						"effect @s jump_boost 90 1"
					]
				}
			},
			"rift:drink_fire_resistance_potion_one": {
				"run_command": {
					"command": [
						"effect @s fire_resistance 180"
					]
				}
			},
			"rift:drink_fire_resistance_potion_two": {
				"run_command": {
					"command": [
						"effect @s fire_resistance 480"
					]
				}
			},
			"rift:drink_swiftness_potion_one": {
				"run_command": {
					"command": [
						"effect @s speed 180"
					]
				}
			},
			"rift:drink_swiftness_potion_two": {
				"run_command": {
					"command": [
						"effect @s speed 480"
					]
				}
			},
			"rift:drink_swiftness_potion_three": {
				"run_command": {
					"command": [
						"effect @s speed 90 1"
					]
				}
			},
			"rift:drink_slowness_potion_one": {
				"run_command": {
					"command": [
						"effect @s slowness 90"
					]
				}
			},
			"rift:drink_slowness_potion_two": {
				"run_command": {
					"command": [
						"effect @s slowness 240"
					]
				}
			},
			"rift:drink_water_breathing_potion_one": {
				"run_command": {
					"command": [
						"effect @s water_breathing 180"
					]
				}
			},
			"rift:drink_water_breathing_potion_two": {
				"run_command": {
					"command": [
						"effect @s water_breathing 480"
					]
				}
			},
			"rift:drink_healing_potion_one": {
				"run_command": {
					"command": [
						"effect @s instant_health 1"
					]
				}
			},
			"rift:drink_healing_potion_two": {
				"run_command": {
					"command": [
						"effect @s instant_health 1 1"
					]
				}
			},
			"rift:drink_harming_potion_one": {
				"run_command": {
					"command": [
						"effect @s instant_damage 1"
					]
				}
			},
			"rift:drink_harming_potion_two": {
				"run_command": {
					"command": [
						"effect @s instant_damage 1 1"
					]
				}
			},
			"rift:drink_poison_potion_one": {
				"run_command": {
					"command": [
						"effect @s poison 45"
					]
				}
			},
			"rift:drink_poison_potion_two": {
				"run_command": {
					"command": [
						"effect @s poison 120"
					]
				}
			},
			"rift:drink_poison_potion_three": {
				"run_command": {
					"command": [
						"effect @s poison 22 1"
					]
				}
			},
			"rift:drink_regeneration_potion_one": {
				"run_command": {
					"command": [
						"effect @s regeneration 45"
					]
				}
			},
			"rift:drink_regeneration_potion_two": {
				"run_command": {
					"command": [
						"effect @s regeneration 120"
					]
				}
			},
			"rift:drink_regeneration_potion_three": {
				"run_command": {
					"command": [
						"effect @s regeneration 22 1"
					]
				}
			},
			"rift:drink_strength_potion_one": {
				"run_command": {
					"command": [
						"effect @s strength 180"
					]
				}
			},
			"rift:drink_strength_potion_two": {
				"run_command": {
					"command": [
						"effect @s strength 480"
					]
				}
			},
			"rift:drink_strength_potion_three": {
				"run_command": {
					"command": [
						"effect @s strength 90 1"
					]
				}
			},
			"rift:drink_weakness_potion_one": {
				"run_command": {
					"command": [
						"effect @s weakness 90"
					]
				}
			},
			"rift:drink_weakness_potion_two": {
				"run_command": {
					"command": [
						"effect @s weakness 240"
					]
				}
			},
			"rift:drink_decay_potion": {
				"run_command": {
					"command": [
						"effect @s wither 40 1"
					]
				}
			},
			"rift:drink_turtle_master_potion_one": {
				"run_command": {
					"command": [
						"effect @s slowness 20 3",
						"effect @s resistance 20 2"
					]
				}
			},
			"rift:drink_turtle_master_potion_two": {
				"run_command": {
					"command": [
						"effect @s slowness 40 3",
						"effect @s resistance 40 2"
					]
				}
			},
			"rift:drink_turtle_master_potion_three": {
				"run_command": {
					"command": [
						"effect @s slowness 20 5",
						"effect @s resistance 20 3"
					]
				}
			},
			"rift:drink_slow_falling_potion_one": {
				"run_command": {
					"command": [
						"effect @s slow_falling 90"
					]
				}
			},
			"rift:drink_slow_falling_potion_two": {
				"run_command": {
					"command": [
						"effect @s slow_falling 240"
					]
				}
			},
			"rift:drink_milk": {
				"run_command": {
					"command": [
						"effect @s clear"
					]
				}
			},
			"rift:lol2": {
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"translate\":\"reminder.cannot_use_treat.text\"}]}"
					]
				}
			},
			"rift:lol3": {
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"translate\":\"reminder.cannot_use_regular_food.text\"}]}"
					]
				}
			},
			"rift:lol4": {
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"translate\":\"reminder.cannot_use_energy_boosters.text\"}]}"
					]
				}
			},
            "rift:start_bleeding": {
                "set_property": {
                    "rift:bleeding": true
                }
            },
            "rift:stop_bleeding": {
                "set_property": {
                    "rift:bleeding": false
                }
            }
        }
    }
}