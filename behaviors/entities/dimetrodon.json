{
    "format_version": "1.16.0",
    "minecraft:entity": {
        "description": {
            "identifier": "rift:dimetrodon",
            "is_spawnable": true,
            "is_summonable": true,
            "is_experimental": false,
			"animations": {
				"contTameTag": "controller.animation.add_tame_tag",
				"contBabyTag": "controller.animation.add_baby_tag"
			},
			"scripts": {
				"animate": [
					"contTameTag",
					"contBabyTag"
				]
			}
        },
        "component_groups": {
            "rift:dimetrodon_baby": {
				"minecraft:is_baby": {},
				"minecraft:ageable": {
                    "duration": 1200,
                    "grow_up": {
                        "event": "rift:baby_grow_up",
                        "target": "self"
                    },
                    "feed_items": [
						{
							"item": "minecraft:beef",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_beef",
							"growth": 0.125
						},
						{
							"item": "minecraft:porkchop",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_porkchop",
							"growth": 0.125
						},
						{
							"item": "minecraft:chicken",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_chicken",
							"growth": 0.125
						},
						{
							"item": "minecraft:muttonraw",
							"growth": 0.1
						},
						{
							"item": "minecraft:muttoncooked",
							"growth": 0.125
						},
						{
							"item": "minecraft:rabbit",
							"growth": 0.1
						},
						{
							"item": "minecraft:cooked_rabbit",
							"growth": 0.125
						},
						{
							"item": "rift:raw_exotic_meat",
							"growth": 0.1
						},
						{
							"item": "rift:cooked_exotic_meat",
							"growth": 0.125
						},
						{
							"item": "rift:raw_dodo_meat",
							"growth": 0.1
						},
						{
							"item": "rift:cooked_dodo_meat",
							"growth": 0.125
						},
						{
							"item": "rift:raw_hadrosaur_meat",
							"growth": 0.1
						},
						{
							"item": "rift:cooked_hadrosaur_meat",
							"growth": 0.125
						}
                    ]
                },
                "minecraft:scale_by_age": {
                    "start_scale": 0.4,
                    "end_scale": 0.85
                },
                "minecraft:behavior.tempt": {
                    "priority": 2,
                    "items": [
                        "minecraft:beef",
						"minecraft:cooked_beef",
						"minecraft:porkchop",
						"minecraft:cooked_porkchop",
						"minecraft:chicken",
						"minecraft:cooked_chicken",
						"minecraft:muttonraw",
						"minecraft:muttoncooked",
						"minecraft:rabbit",
						"minecraft:cooked_rabbit",
						"minecraft:cod",
						"minecraft:cooked_cod",
						"minecraft:salmon",
						"minecraft:cooked_salmon",
						"minecraft:tropical_fish",
						"rift:flesh_treat",
						"rift:fish_treat",
						"rift:raw_exotic_meat",
						"rift:cooked_exotic_meat",
						"rift:raw_dodo_meat",
						"rift:cooked_dodo_meat",
						"rift:raw_hadrosaur_meat",
						"rift:cooked_hadrosaur_meat"
                    ]
                }
            },
            "rift:dimetrodon_baby_wild": {
				"minecraft:health": {
                    "value": 20
                },
                "minecraft:behavior.follow_parent": {
                    "priority": 6
                },
                "minecraft:tameable": {
                    "probability": 0.25,
                    "tame_items": [
						"rift:flesh_treat",
						"rift:fish_treat"
                    ],
                    "tame_event": {
                        "event": "rift:on_tame",
                        "target": "self"
                    }
				},
				"minecraft:behavior.random_stroll": {
					"priority": 7
				}
            },
            "rift:dimetrodon_baby_tamed": {
                "minecraft:health": {
                    "value": 20,
                    "max": 25
                }
            },
            "rift:dimetrodon_adult": {
                "minecraft:experience_reward": {
                    "on_bred": "Math.random(4, 6)",
                    "on_death": "query.last_hit_by_player ? Math.random(5, 9) : 0"
                },
                "minecraft:loot": {
                    "table": "loot_tables/entities/dimetrodon.loot.json"
                },
                "minecraft:breedable": {
                    "breeds_with": {
                        "mate_type": "rift:dimetrodon",
                        "baby_type": "rift:egg",
                        "breed_event": {
                            "event": "rift:summon_dimetrodon_egg",
                            "target": "baby"
                        }
                    },
                    "breed_items": [
						"rift:flesh_treat",
						"rift:fish_treat"
                    ],
                    "require_tame": true,
                    "inherit_tamed": false,
                    "breed_cooldown": 1200
				},
				"minecraft:buoyant": {
					"apply_gravity": true,
					"base_buoyancy": 0.4,
					"simulate_waves": true,
					"big_wave_probability": 0.03,
					"big_wave_speed": 10.0,
					"drag_down_on_buoyancy_removed": 0,
					"liquid_blocks": ["water"]
				}
            },
            "rift:dimetrodon_adult_wild": {
				"minecraft:health": {
                    "value": 40
                },
                "minecraft:behavior.random_stroll": {
					"priority": 7
				},
				"minecraft:behavior.avoid_mob_type": {
					"priority": 2,
					"entity_types": [
						{
							"filters": {
						  		"test": "is_family",
						  		"value": "parasaurScary",
						  		"subject": "other"
							},
							"max_dist": 12,
							"must_see": true,
							"walk_speed_multiplier": 1.2,
							"sprint_speed_multiplier": 1.2
					  	}
					]
				},
				"minecraft:despawn": {
					"despawn_from_distance": {}
				},
				"minecraft:behavior.hurt_by_target": {
					"priority": 3,
					"entity_types": {
						"filters": {
						  	"test": "is_family",
						  	"subject": "other",
						  	"operator": "!=",
						  	"value": "forcedAttack"
						}
					}
				}
			},
			"rift:dimetrodon_adult_not_trusting": {
				"minecraft:trusting": {
                    "probability": 0.25,
                    "trust_event": {
                        "event": "rift:on_trust",
                        "target": "self"
                    },
                    "trust_items": [
						"rift:flesh_treat",
						"rift:fish_treat"
					]
				}
			},
			"rift:default_targets": {
				"minecraft:behavior.nearest_attackable_target": {
					"priority": 4,
					"reselect_targets": true,
					"within_radius": 25,
					"must_see": true,
					"entity_types": [
						{
							"filters": {
								"all_of": [
									{
										"test" :  "is_family", 
										"subject" : "other", 
										"value" :  "parasaurAngerer"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "dimetrodon"
									}
								]
							},
							"max_dist": 35
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "dimetrodon"
									},
									{
										"test": "is_family",
										"subject": "other",
										"operator": "!=",
										"value": "apatosaurus"
									},
									{
										"any_of": [
											{
												"test": "is_family",
												"subject": "other",
												"value": "herbivore"
											},
											{
												"test": "is_family",
												"subject": "other",
												"value": "animal"
											}
										]
									}
								]
							}
						}
					]
				}
			},
			"rift:attack_forced_attack_entity": {
				"minecraft:behavior.nearest_attackable_target": {
				  	"priority": 4,
				  	"entity_types": [
						{
					  		"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "isForcedAttacking"
					  		},
					  		"max_dist": 35
						}
				  	]
				},
				"minecraft:on_target_escape": {
					"event": "rift:no_force_attacked",
				  	"target": "self"
				}
			},
            "rift:dimetrodon_adult_trusting": {
				"minecraft:trust": {}
			},
			"rift:dimetrodon_adult_waiting_for_tame": {
				"minecraft:is_illager_captain": {},
				"minecraft:timer": {
					"time": 10,
					"time_down_event": {
						"event": "rift:can_be_tamed_again",
						"target": "self"
					}
				}
			},
			"rift:dimetrodon_adult_chance_for_tame": {
				"minecraft:is_sheared": {}
			},
			"rift:dimetrodon_adult_tameable": {
				"minecraft:tameable": {
                    "probability": 1,
                    "tame_items": [
						"rift:flesh_treat",
						"rift:fish_treat"
                    ],
                    "tame_event": {
                        "event": "rift:adult_on_tame",
                        "target": "self"
                    }
                }
			},
			"rift:dimetrodon_default_temperature_mode": {
				"minecraft:movement": {
					"value": 0.175
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"any_of": [
											{
												"test": "has_biome_tag",
												"value": "desert"
											},
											{
												"test": "has_biome_tag",
												"value": "mesa"
											},
											{
												"test": "in_nether",
												"value": true
											}
										]
									}
								]
							},
							"event": "rift:frost_mode",
							"target": "self"
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"any_of": [
											{
												"test": "has_biome_tag",
												"value": "cold"
											},
											{
												"test": "has_biome_tag",
												"value": "frozen"
											},
											{
												"test": "has_biome_tag",
												"value": "taiga"
											},
											{
												"test": "in_water_or_rain",
												"value": true
											}
										]
									}
								]
							},
							"event": "rift:flame_mode",
							"target": "self"
						}
					]
				}
			},
			"rift:dimetrodon_flame_mode": {
				"minecraft:is_ignited": {},
				"minecraft:movement": {
					"value": 0.225
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon fire weapon.json"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"any_of": [
											{
												"test": "has_biome_tag",
												"value": "cold"
											},
											{
												"test": "has_biome_tag",
												"value": "frozen"
											},
											{
												"test": "has_biome_tag",
												"value": "taiga"
											},
											{
												"test": "in_water_or_rain",
												"value": true
											}
										]
									}
								]
							},
							"event": "rift:flame_mode",
							"target": "self"
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "cold"
									},
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "frozen"
									},
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "taiga"
									},
									{
										"test": "in_water_or_rain",
										"value": false
									}
								]
							},
							"event": "rift:flame_mode_grace",
							"target": "self"
						}
					]
				},
				"minecraft:fire_immune": {}
			},
			"rift:dimetrodon_flame_mode_grace_period": {
				"minecraft:is_ignited": {},
				"minecraft:movement": {
					"value": 0.225
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon fire weapon.json"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "cold"
									},
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "frozen"
									},
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "taiga"
									},
									{
										"test": "in_water_or_rain",
										"value": false
									}
								]
							},
							"event": "rift:flame_mode_grace_loop",
							"target": "self"
						}
					]
				},
				"minecraft:timer": {
					"time": 90,
					"time_down_event": {
						"event": "rift:stop_flame_mode"
					}
				},
				"minecraft:fire_immune": {}
			},
			"rift:dimetrodon_frost_mode": {
				"minecraft:is_charged": {},
				"minecraft:movement": {
					"value": 0.175
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 12
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon frost weapon.json"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"any_of": [
											{
												"test": "has_biome_tag",
												"value": "desert"
											},
											{
												"test": "has_biome_tag",
												"value": "mesa"
											},
											{
												"test": "in_nether",
												"value": true
											}
										]
									}
								]
							},
							"event": "rift:frost_mode",
							"target": "self"
						},
						{
							"filters": {
								"all_of": [
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "desert"
									},
									{
										"test": "has_biome_tag",
										"operator": "!=",
										"value": "mesa"
									},
									{
										"test": "in_nether",
										"value": false
									}
								]
							},
							"event": "rift:frost_mode_grace",
							"target": "self"
						}
					]
				}
			},
			"rift:dimetrodon_frost_mode_grace_period": {
				"minecraft:is_charged": {},
				"minecraft:movement": {
					"value": 0.175
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 12
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon frost weapon.json"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"event": "rift:frost_mode_grace_loop",
							"target": "self"
						}
					]
				},
				"minecraft:timer": {
					"time": 90,
					"time_down_event": {
						"event": "rift:stop_frost_mode",
						"target": "self"
					}
				}
			},
			"rift:dimetrodon_forced_flame_mode": {
				"minecraft:is_ignited": {},
				"minecraft:movement": {
					"value": 0.225
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon fire weapon.json"
				},
				"minecraft:fire_immune": {},
				"minecraft:timer": {
					"time": 480,
					"time_down_event": {
						"event": "rift:stop_forced_flame_mode",
						"target": "self"
					}
				}
			},
			"rift:dimetrodon_forced_frost_mode": {
				"minecraft:is_charged": {},
				"minecraft:movement": {
					"value": 0.175
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 12
				},
				"minecraft:equipment": {
					"table": "loot_tables/entities/dimetrodon frost weapon.json"
				},
				"minecraft:environment_sensor": {
					"triggers": [
						{
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_charged"
									}
								]
							},
							"event": "rift:frost_mode_grace_loop",
							"target": "self"
						}
					]
				},
				"minecraft:timer": {
					"time": 480,
					"time_down_event": {
						"event": "rift:stop_forced_frost_mode",
						"target": "self"
					}
				}
			},
			"rift:dimetrodon_forced_neutral_mode": {
				"minecraft:movement": {
					"value": 0.175
				},
				"minecraft:water_movement": {
					"drag_factor": 1
				},
				"minecraft:attack": {
					"damage": 8
				},
				"minecraft:timer": {
					"time": 60,
					"time_down_event": {
						"event": "rift:stop_forced_neutral_mode",
						"target": "self"
					}
				}
			},
            "rift:dimetrodon_adult_tamed": {
                "minecraft:health": {
                    "value": 40,
                    "max": 50
                },
				"minecraft:healable": {
					"force_use": true,
					"items": [
						{
							"item": "minecraft:beef",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_beef",
							"heal_amount": 8
						},
						{
							"item": "minecraft:porkchop",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_porkchop",
							"heal_amount": 8
						},
						{
							"item": "minecraft:chicken",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_chicken",
							"heal_amount": 8
						},
						{
							"item": "minecraft:muttonraw",
							"heal_amount": 4
						},
						{
							"item": "minecraft:muttoncooked",
							"heal_amount": 8
						},
						{
							"item": "minecraft:rabbit",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_rabbit",
							"heal_amount": 8
						},
						{
							"item": "minecraft:cod",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_cod",
							"heal_amount": 8
						},
						{
							"item": "minecraft:salmon",
							"heal_amount": 4
						},
						{
							"item": "minecraft:cooked_salmon",
							"heal_amount": 8
						},
						{
							"item": "minecraft:tropical_fish",
							"heal_amount": 4
						},
						{
							"item": "rift:raw_exotic_meat",
							"heal_amount": 4
						},
						{
							"item": "rift:cooked_exotic_meat",
							"heal_amount": 8
						},
						{
							"item": "rift:raw_dodo_meat",
							"heal_amount": 4
						},
						{
							"item": "rift:cooked_dodo_meat",
							"heal_amount": 8,
							"effects": [
								{
									"name": "absorption",
									"duration": 30,
									"amplifier": 3
								}
							]
						},
						{
							"item": "rift:raw_hadrosaur_meat",
							"heal_amount": 4
						},
						{
							"item": "rift:cooked_hadrosaur_meat",
							"heal_amount": 8,
							"effects": [
								{
									"name": "resistance",
									"duration": 60,
									"amplifier": 3
								}
							]
						}
					]
                }
			},
			"rift:dimetrodon_tamed": {
				"minecraft:is_tamed": {},
				"minecraft:behavior.follow_owner": {
					"start_distance": 4,
					"stop_distance": 40,
					"priority": 6
				},
				"minecraft:behavior.owner_hurt_by_target": {
					"priority": 3
				},
				"minecraft:behavior.owner_hurt_target": {
					"priority": 4
				},
				"minecraft:sittable": {},
				"minecraft:behavior.stay_while_sitting": {
					"priority": 0
				}
			},
			"rift:variant_one": {
				"minecraft:variant": {
					"value": 0
				}
			},
			"rift:variant_two": {
				"minecraft:variant": {
					"value": 1
				}
			},
			"rift:variant_three": {
				"minecraft:variant": {
					"value": 2
				}
			},
			"rift:variant_four": {
				"minecraft:variant": {
					"value": 3
				}
			}
        },
        "components": {
			"minecraft:type_family": {
				"family": [
					"dimetrodon",
					"mob",
					"carnivore",
					"mammal"
				]
			},
			"minecraft:movement": {
				"value": 0.175
			},
			"minecraft:navigation.walk": {
				"is_amphibious": true,
				"avoid_water": false,
				"can_path_over_water": true,
				"can_sink": false,
				"avoid_damage_blocks": true,
				"can_path_over_lava": true,
				"can_walk_in_lava": true
			},
			"minecraft:movement.basic": {},
			"minecraft:behavior.move_to_land": {},
			"minecraft:behavior.breed": {
				"priority": 1
			},
			"minecraft:jump.static": {
				"jump_power": 0.65
			},
			"minecraft:behavior.delayed_attack": {
				"priority": 5,
				"attack_duration": 0.52,
				"hit_delay_pct": 1,
				"track_target": true,
				"reach_multiplier": 3
			},
			"minecraft:is_hidden_when_invisible": {},
			"minecraft:pushable": {},
			"minecraft:physics": {},
			"minecraft:nameable": {},
			"minecraft:collision_box": {
				"height": 1.5,
				"width": 1
			},
			"minecraft:breathable": {
				"total_supply": 15,
				"suffocate_time": 0
			},
			"minecraft:leashable": {
				"soft_distance": 4,
				"hard_distance": 8,
				"max_distance": 12
			},
			"minecraft:behavior.random_look_around": {
				"priority": 8
			},
			"minecraft:interact": {
				"interactions": [
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_sheared"
									},
									{
										"any_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:flesh_treat"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "rift:fish_treat"
											}
										]
									}
								]
							},
							"event": "rift:adult_failed_tame",
							"target": "self"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:flame_stimulant"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_ignited"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									}
								]
							},
							"event": "rift:forced_flame_mode"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:frost_stimulant"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_charged"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									}
								]
							},
							"event": "rift:forced_frost_mode"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"any_of": [
											{
												"test": "has_component",
												"subject": "self",
												"value": "minecraft:is_ignited"
											},
											{
												"test": "has_component",
												"subject": "self",
												"value": "minecraft:is_charged"
											}
										]
									},
									{
										"test": "has_equipment",
										"subject": "other",
										"domain": "hand",
										"value": "rift:neutral_stimulant"
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									}
								]
							},
							"event": "rift:forced_neutral_mode"
						},
						"use_item": true
					},
					{
						"on_interact": {
							"filters": {
								"all_of": [
									{
										"any_of": [
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:potion:23"
											},
											{
												"test": "has_equipment",
												"subject": "other",
												"domain": "hand",
												"value": "minecraft:potion:24"
											}
										]
									},
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_baby",
										"operator": "!="
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									},
									{
										"test": "is_sneaking",
										"subject": "other",
										"value": true
									}
								]
							},
							"event": "rift:commit_suicide",
							"target": "self"
						},
						"use_item": true,
						"transform_to_item": "minecraft:glass_bottle"
					}
				]
            },
			"minecraft:damage_sensor": {
				"triggers": [
					{
						"on_damage": {
							"filters": {
								"test": "is_family",
								"value": "stegosaurus",
								"subject": "other"
							}
						},
						"damage_multiplier": 5
					},
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
										"test": "is_owner",
										"subject": "other",
										"value": true
									},
									{
										"test": "has_component",
										"subject": "self",
										"value": "minecraft:is_tamed"
									}
								]
							}
						},
						"deals_damage": false
					},
					{
						"on_damage": {
							"filters": {
								"all_of": [
									{
								  		"test": "is_family",
								  		"subject": "other",
								  		"value": "forcedAttack"
									},
									{
								  		"test": "has_target",
								  		"subject": "self",
								  		"value": false
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_baby"
									},
									{
										"test": "has_component",
										"subject": "self",
										"operator": "!=",
										"value": "minecraft:is_tamed"
									}
							  	]
							},
							"event": "rift:on_force_attacked",
							"target": "self"
						}
					},
					{
						"on_damage": {
							"filters": {
								"test": "is_family",
								"subject": "other",
								"value": "sarcoSpinAttack"
							},
							"event": "rift:hit_by_sarco_spin",
							"target": "self"
						}
					},
					{
						"on_damage": {
						  	"filters": {
								"test": "has_equipment",
								"subject": "other",
								"value": "rift:dimetrodon_frost_attack"
						  	},
						  	"event": "rift:hit_by_frost_dimetrodon",
						  	"target": "self"
						}
					}
				]
			}
        },
        "events": {
			"minecraft:entity_spawned": {
				"randomize": [
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting",
								"rift:dimetrodon_default_temperature_mode",
								"rift:variant_one"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting",
								"rift:dimetrodon_default_temperature_mode",
								"rift:variant_two"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting",
								"rift:dimetrodon_default_temperature_mode",
								"rift:variant_three"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting",
								"rift:dimetrodon_default_temperature_mode",
								"rift:variant_four"
							]
						}
					}
				]
			},
			"rift:baby_grow_up": {
				"sequence": [
					{
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting",
								"rift:dimetrodon_default_temperature_mode"
							]
						},
						"remove": {
							"component_groups": [
								"rift:dimetrodon_baby",
								"rift:dimetrodon_baby_wild"
							]
						}
					},
					{
						"filters": {
							"test": "has_component",
							"subject": "self",
							"value": "minecraft:is_tamed"
						},
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult_tamed"
							]
						},
						"remove": {
							"component_groups": [
								"rift:dimetrodon_baby_tamed",
								"rift:dimetrodon_adult_wild",
								"rift:default_targets",
								"rift:dimetrodon_adult_not_trusting"
							]
						}
					}
				]
			},
			"rift:on_tame": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_baby_tamed",
						"rift:dimetrodon_tamed"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_baby_wild"
					]
				}
			},
			"rift:on_trust": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_adult_trusting",
						"rift:dimetrodon_adult_waiting_for_tame"
					]
				},
				"remove": {
					"component_groups": [
						"rift:default_targets",
						"rift:dimetrodon_adult_not_trusting",
						"rift:dimetrodon_adult_wild",
						"rift:attack_forced_attack_entity"
					]
				},
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"text\":\"You made a wild Dimetrodon trust you! Keep feeding it every once in a while to eventually tame it!\"}]}"
					]
				}
			},
			"rift:can_be_tamed_again": {
				"randomize": [
					{
						"weight": 70,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult_chance_for_tame"
							]
						},
						"remove": {
							"component_groups": [
								"rift:dimetrodon_adult_waiting_for_tame"
							]
						}
					},
					{
						"weight": 30,
						"add": {
							"component_groups": [
								"rift:dimetrodon_adult_tameable"
							]
						},
						"remove": {
							"component_groups": [
								"rift:dimetrodon_adult_waiting_for_tame"
							]
						}
					}
				]
			},
			"rift:adult_failed_tame": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_adult_waiting_for_tame"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_adult_chance_for_tame"
					]
				},
				"run_command": {
					"command": [
						"playsound random.eat @a[r=4]"
					]
				}
			},
			"rift:adult_on_tame": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_adult_tamed",
						"rift:dimetrodon_tamed"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_adult_tameable"
					]
				},
				"run_command": {
					"command": [
						"tellraw @p {\"rawtext\":[{\"text\":\"You have succesfully tamed a Dimetrodon!\"}]}"
					]
				}
			},
			"rift:spawn_as_baby": {
				"randomize": [
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_baby",
								"rift:dimetrodon_baby_wild",
								"rift:variant_one"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_baby",
								"rift:dimetrodon_baby_wild",
								"rift:variant_two"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_baby",
								"rift:dimetrodon_baby_wild",
								"rift:variant_three"
							]
						}
					},
					{
						"weight": 25,
						"add": {
							"component_groups": [
								"rift:dimetrodon_baby",
								"rift:dimetrodon_baby_wild",
								"rift:variant_four"
							]
						}
					}
				]
			},
			"rift:frost_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_frost_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_flame_mode",
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"run_command": {
					"command": [
						"function cmd.dimetrodon_frost_mode"
					]
				}
			},
			"rift:frost_mode_grace": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_frost_mode_grace_period"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_frost_mode"
					]
				},
				"run_command": {
					"command": [
						"function cmd.dimetrodon_frost_mode"
					]
				}
			},
			"rift:frost_mode_grace_loop": {
				"run_command": {
					"command": [
						"function cmd.dimetrodon_frost_mode"
					]
				}
			},
			"rift:stop_frost_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_frost_mode_grace_period"
					]
				}
			},
			"rift:flame_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_flame_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				}
			},
			"rift:flame_mode_grace": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_flame_mode_grace_period"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_flame_mode"
					]
				}
			},
			"rift:flame_mode_grace_loop": {
			},
			"rift:stop_flame_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_flame_mode_grace_period"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:forced_flame_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_forced_flame_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode",
						"rift:dimetrodon_frost_mode",
						"rift:dimetrodon_frost_mode_grace_period",
						"rift:dimetrodon_forced_frost_mode",
						"rift:dimetrodon_forced_neutral_mode"
					]
				}
			},
			"rift:stop_forced_flame_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_forced_flame_mode"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:forced_frost_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_forced_frost_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode",
						"rift:dimetrodon_flame_mode",
						"rift:dimetrodon_flame_mode_grace_period",
						"rift:dimetrodon_forced_flame_mode",
						"rift:dimetrodon_forced_neutral_mode"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:stop_forced_frost_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_forced_frost_mode"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:forced_neutral_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_forced_neutral_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode",
						"rift:dimetrodon_flame_mode",
						"rift:dimetrodon_flame_mode_grace_period",
						"rift:dimetrodon_forced_flame_mode",
						"rift:dimetrodon_frost_mode",
						"rift:dimetrodon_frost_mode_grace_period",
						"rift:dimetrodon_forced_frost_mode",
						"rift:dimetrodon_forced_neutral_mode"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:stop_forced_neutral_mode": {
				"add": {
					"component_groups": [
						"rift:dimetrodon_default_temperature_mode"
					]
				},
				"remove": {
					"component_groups": [
						"rift:dimetrodon_forced_neutral_mode"
					]
				},
				"run_command": {
					"command": [
						"replaceitem entity @s slot.weapon.mainhand 0 air"
					]
				}
			},
			"rift:commit_suicide": {
				"run_command": {
					"command": [
						"kill @s"
					]
				}
			},
			"rift:on_force_attacked": {
				"add": {
				  	"component_groups": [
						"rift:attack_forced_attack_entity"
				  	]
				},
				"remove": {
				  	"component_groups": [
						"rift:default_targets"
				  	]
				}
			},
			"rift:no_force_attacked": {
				"add": {
					"component_groups": [
						"rift:default_targets"
				  	]
				},
				"remove": {
				  	"component_groups": [
						"rift:attack_forced_attack_entity"
				  	]
				}
			},
			"rift:hit_by_sarco_spin": {
				"run_command": {
					"command": [
						"effect @s slowness 30 2"
					]
				}
			},
			"rift:hit_by_frost_dimetrodon": {
				"run_command": {
					"command": [
						"effect @s weakness 20 2",
						"effect @s slowness 20 2"
				  	]
				}
			}
        }
    }
}