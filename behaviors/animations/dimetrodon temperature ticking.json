{
	"format_version": "1.10.0",
	"animations": {
		"animation.test_for_flame_dimetrodon": {
			"animation_length": 0.05,
			"loop": true,
			"timeline": {
				"0": [
					"v.x = 0.0; for_each(t.dimetrodon, query.get_nearby_entities_except_self(2, 'rift:dimetrodon'), { v.x = v.x + ((t.dimetrodon -> query.is_tamed) && (t.dimetrodon -> query.is_ignited)); }); return v.x > 0.0;"
				]
			}
        },
        "animation.test_for_frost_dimetrodon": {
			"animation_length": 0.05,
			"loop": true,
			"timeline": {
				"0": [
					"v.x = 0.0; for_each(t.dimetrodon, query.get_nearby_entities_except_self(2, 'rift:dimetrodon'), { v.x = v.x + ((t.dimetrodon -> query.is_tamed) && (t.dimetrodon -> query.is_powered)); }); return v.x > 0.0;"
				]
			}
		},
		"animation.test_for_neutral_dimetrodon": {
			"animation_length": 0.05,
			"loop": true,
			"timeline": {
				"0": [
					"v.x = 0.0; for_each(t.dimetrodon, query.get_nearby_entities_except_self(2, 'rift:dimetrodon'), { v.x = v.x + ((t.dimetrodon -> query.is_tamed) && !(t.dimetrodon -> query.is_ignited) && !(t.dimetrodon -> query.is_powered)); }); return v.x > 0.0;"
				]
			}
		}
	}
}