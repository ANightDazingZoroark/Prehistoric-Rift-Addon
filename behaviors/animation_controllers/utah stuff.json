{
    "format_version": "1.10.0",
    "animation_controllers": {
        "controller.animation.wild_utahraptor_pack_buff": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "find_friends": "query.has_target && !query.is_tamed && query.property('rift:is_hypnotized') == false && query.property('rift:is_hypnotized_tamed') == false"
                        }
                    ]
                },
                "find_friends": {
                    "on_entry": [
                        "v.x = 0.0; for_each(t.utahraptor, query.get_nearby_entities_except_self(16, 'rift:utahraptor'), { v.x = v.x + !(t.utahraptor -> query.is_tamed); });",
                        "v.chance = Math.random_integer(0, 2);"
                    ],
                    "transitions": [
                        {
                            "use_buff": "v.chance == 0 && v.x >= 3"
                        },
                        {
                            "default": "!query.has_target || query.property('rift:is_hypnotized') == true || query.property('rift:is_hypnotized_tamed') == true"
                        }
                    ]
                },
                "use_buff": {
                    "on_entry": [
                        "@s rift:wild_utahraptor_buffing"
                    ],
                    "transitions": [
                        {
                            "default": "!query.has_target || query.property('rift:is_hypnotized') == true || query.property('rift:is_hypnotized_tamed') == true"
                        }
                    ]
                }
            }
        },
        "controller.animation.wild_utahraptor_remove_buffs": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "buffs": "query.has_target && !query.is_tamed"
                        }
                    ]
                },
                "buffs": {
                    "on_exit": [
						"/effect @s speed 0",
						"/effect @s strength 0"
                    ],
                    "transitions": [
                        {
                            "default": "!query.has_target || !query.is_tamed"
                        }
                    ]
                }
            }
        },
        "controller.animation.utah_pack_buffed": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"buffed": "query.property('rift:is_pack_buffed') == true"
						}
					]
				},
				"buffed": {
					"transitions": [
						{
							"default": "query.property('rift:is_pack_buffed') == false"
						}
					],
                    "on_entry": [
                        "/tag @s add packBuffed"
                    ],
                    "on_exit": [
                        "/tag @s remove packBuffed"
                    ],
					"animations": [
					 	"animPackBuffed"
					]
				}
			}
		},
        "controller.animation.utah_pack_buff_countdown": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"buffed": "query.property('rift:is_pack_buffed') == true"
						}
					]
				},
				"buffed": {
					"transitions": [
						{
							"default": "query.all_animations_finished"
						}
					],
					"animations": [
					 	"animPackBuffCountdown"
					],
                    "on_exit": [
                        "/event entity @s rift:stop_self_pack_buff",
                        "/effect @s speed 0",
                        "/effect @s strength 0"
                    ]
				}
			}
		}
    }
}