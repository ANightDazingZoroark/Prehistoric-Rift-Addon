{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.apato_furnace_smelting_cooldown": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"smelting": "query.property('rift:is_smelting') == true"
						}
					],
					"on_entry": [
						"/tag @s remove smelting"
					],
					"on_exit": [
						"/tag @s add smelting"
					]
				},
				"smelting": {
					"animations": [
						"animSmeltFurnace"
					],
					"transitions": [
						{
							"default": "query.property('rift:is_smelting') == false"
						}
					]
				}
			}
		},
		"controller.animation.apato_detect_stationary_weapon": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"cannon": "query.skin_id == 1"
						},
						{
							"mortar": "query.skin_id == 2"
						},
						{
							"catapult": "query.skin_id == 3"
						}
					]
				},
				"cannon": {
					"transitions": [
						{
							"default": "query.skin_id == 0"
						},
						{
							"mortar": "query.skin_id == 2"
						},
						{
							"catapult": "query.skin_id == 3"
						}
					],
					"on_entry": [
						"/tag @s add apatoCannon"
					],
					"on_exit": [
						"/tag @s remove apatoCannon"
					]
				},
				"mortar": {
					"transitions": [
						{
							"default": "query.skin_id == 0"
						},
						{
							"cannon": "query.skin_id == 1"
						},
						{
							"catapult": "query.skin_id == 3"
						}
					],
					"on_entry": [
						"/tag @s add apatoMortar"
					],
					"on_exit": [
						"/tag @s remove apatoMortar"
					]
				},
				"catapult": {
					"transitions": [
						{
							"default": "query.skin_id == 0"
						},
						{
							"cannon": "query.skin_id == 1"
						},
						{
							"mortar": "query.skin_id == 2"
						}
					],
					"on_entry": [
						"/tag @s add apatoCatapult"
					],
					"on_exit": [
						"/tag @s remove apatoCatapult"
					]
				}
			}
		},
		"controller.animation.apato_wild_low_on_health": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"lowHealth": "(query.health <= query.max_health * 0.25) && !!query.is_baby"
						}
					]
				},
				"lowHealth": {
					"transitions": [
						{
							"default": "(query.health > query.max_health * 0.25) || query.is_tamed || query.is_baby"
						}
					],
					"on_entry": [
						"@s rift:low_health_mode"
					],
					"on_exit": [
						"@s rift:exit_low_health_mode"
					]
				}
			}
		},
		"controller.animation.apato_wild_can_break_blocks": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"canBreak": "!query.is_tamed && !(query.is_angry || query.is_avoiding_mobs)"
						}
					]
				},
				"canBreak": {
					"transitions": [
						{
							"default": "query.is_tamed || !query.is_angry || !query.is_avoiding_mobs"
						}
					],
					"animations": [
						"animBreakStuff"
					]
				}
			}
		},
		"controller.animation.apato_tamed_can_break_blocks": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"canBreak": "query.is_ignited"
						}
					]
				},
				"canBreak": {
					"transitions": [
						{
							"default": "!query.is_tamed || query.is_baby || !query.is_ignited"
						}
					],
					"animations": [
						"animBreakStuff"
					]
				}
			}
		},
		"controller.animation.apato_manage_tame_state": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"isBaby": "query.is_baby && query.is_tamed"
						},
						{
							"isAdult": "!query.is_baby && query.is_tamed"
						}
					]
				},
				"isBaby": {
					"transitions": [
						{
							"standingBaby": "query.property('rift:tame_state') == 0"
						},
						{
							"sittingBaby": "query.property('rift:tame_state') == 1"
						},
						{
							"wanderingBaby": "query.property('rift:tame_state') == 2"
						}
					]
				},
				"isAdult": {
					"transitions": [
						{
							"standingAdult": "query.property('rift:tame_state') == 0"
						},
						{
							"sittingAdult": "query.property('rift:tame_state') == 1"
						},
						{
							"wanderingAdult": "query.property('rift:tame_state') == 2"
						}
					],
					"on_entry": [
						"@s rift:force_implement_adult_speed"
					]
				},
				"standingBaby": {
					"transitions": [
						{
							"default": "!query.is_tamed || !query.is_baby"
						},
						{
							"sittingBaby": "query.property('rift:tame_state') == 1"
						},
						{
							"wanderingBaby": "query.property('rift:tame_state') == 2"
						}
					],
					"on_entry": [
						"@s rift:on_standing_baby"
					]
				},
				"sittingBaby": {
					"transitions": [
						{
							"default": "!query.is_tamed || !query.is_baby"
						},
						{
							"standingBaby": "query.property('rift:tame_state') == 0"
						},
						{
							"wanderingBaby": "query.property('rift:tame_state') == 2"
						}
					],
					"on_entry": [
						"@s rift:on_sitting_baby"
					]
				},
				"wanderingBaby": {
					"transitions": [
						{
							"default": "!query.is_tamed || !query.is_baby"
						},
						{
							"standingBaby": "query.property('rift:tame_state') == 0"
						},
						{
							"sittingBaby": "query.property('rift:tame_state') == 1"
						}
					],
					"on_entry": [
						"@s rift:on_wandering_baby"
					]
				},
				"standingAdult": {
					"transitions": [
						{
							"default": "!query.is_tamed || query.is_baby"
						},
						{
							"sittingAdult": "query.property('rift:tame_state') == 1"
						},
						{
							"wanderingAdult": "query.property('rift:tame_state') == 2"
						}
					],
					"on_entry": [
						"@s rift:on_standing_adult"
					]
				},
				"sittingAdult": {
					"transitions": [
						{
							"default": "!query.is_tamed || query.is_baby"
						},
						{
							"standingAdult": "query.property('rift:tame_state') == 0"
						},
						{
							"wanderingAdult": "query.property('rift:tame_state') == 2"
						}
					],
					"on_entry": [
						"@s rift:on_sitting_adult"
					]
				},
				"wanderingAdult": {
					"transitions": [
						{
							"default": "!query.is_tamed || query.is_baby"
						},
						{
							"standingAdult": "query.property('rift:tame_state') == 0"
						},
						{
							"sittingAdult": "query.property('rift:tame_state') == 1"
						}
					],
					"on_entry": [
						"@s rift:on_wandering_adult"
					]
				}
			}
		}
	}
}