{
    "format_version": "1.10.0",
    "animation_controllers": {
        "controller.animation.wild_direwolf_pack_buff": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "find_friends": "query.has_target && !query.is_tamed"
                        }
                    ]
                },
                "find_friends": {
                    "on_entry": [
                        "v.x = 0.0; for_each(t.direwolf, query.get_nearby_entities_except_self(16, 'rift:direwolf'), { v.x = v.x + !(t.direwolf -> query.is_tamed); }); for_each(t.direwolf_werewolf, query.get_nearby_entities_except_self(16, 'rift:direwolf_werewolf'), { v.x = v.x + !(t.direwolf_werewolf -> query.is_tamed); });",
                        "v.chance = Math.random_integer(0, 2);"
                    ],
                    "transitions": [
                        {
                            "use_buff": "v.chance == 0 && v.x >= 3"
                        },
                        {
                            "default": "!query.has_target"
                        }
                    ]
                },
                "use_buff": {
                    "on_entry": [
                        "@s rift:wild_direwolf_buffing"
                    ],
                    "transitions": [
                        {
                            "default": "!query.has_target"
                        }
                    ]
                }
            }
        },
        "controller.animation.wild_direwolf_remove_buffs": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "buffs": "query.has_target && !query.is_tamed"
                        }
                    ]
                },
                "buffs": {
                    "on_exit": [
						"/effect @s speed 0",
						"/effect @s strength 0"
                    ],
                    "transitions": [
                        {
                            "default": "!query.has_target || query.is_tamed"
                        }
                    ]
                }
            }
        },
        "controller.animation.direwolf_forced_use_bite": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biting": "query.actor_property('rift:forced_attack_mode') == 1"
						}
					]
				},
				"biting": {
					"transitions": [
						{
							"default": "query.actor_property('rift:forced_attack_mode') != 1"
						}
					],
					"animations": [
						"animForcedAttackNormal"
					]
				}
			}
		},
        "controller.animation.direwolf_transform": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "transformed": "query.out_of_control && ((query.time_of_day >= 0.75) || (query.time_of_day < 0.25))"
                        }
                    ]
                },
                "transformed": {
                    "transitions": [
                        {
                            "default": "!query.biome_has_any_tag('nether', 'the_end') && (query.time_of_day < 0.75) && (query.time_of_day >= 0.25)"
                        }
                    ],
                    "on_entry": [
                        "@s rift:transform_into_werewolf"
                    ],
                    "on_exit": [
                        "@s rift:transform_into_normal"
                    ]
                }
            }
        },
        "controller.animation.direwolf_werewolf_switch_between_melee_attacks": {
            "initial_state": "default",
            "states": {
                "default": {
                    "transitions": [
                        {
                            "chooseAttack": "query.has_target && query.is_sheared"
                        }
                    ]
                },
                "chooseAttack": {
                    "transitions": [
                        {
                            "bite": "v.attackMode = (math.floor(math.random(0,2))); return v.attackMode == 0;"
                        },
                        {
                            "claw": "v.attackMode == 1"
                        }
                    ]
                },
                "bite": {
                    "transitions": [
                        {
                            "biteLimbo": "query.is_delayed_attacking"
                        },
                        {
                            "default": "!query.has_target || !query.is_sheared"
                        }
                    ],
                    "on_entry": [
                        "@s rift:can_use_bite_werewolf"
                    ]
                },
                "biteLimbo": {
                    "transitions": [
                        {
                            "bite": "v.attackMode = (math.floor(math.random(0,2))); return !query.is_delayed_attacking && v.attackMode == 0;"
                        },
                        {
                            "claw": "!query.is_delayed_attacking && v.attackMode == 1"
                        },
                        {
                            "default": "!query.has_target || !query.is_sheared"
                        }
                    ],
                    "on_exit": [
                        "@s rift:cannot_use_bite_werewolf"
                    ]
                },
                "claw": {
                    "transitions": [
                        {
                            "clawLimbo": "query.is_delayed_attacking"
                        },
                        {
                            "default": "!query.has_target || !query.is_sheared"
                        }
                    ],
                    "on_entry": [
                        "@s rift:can_use_claw_werewolf"
                    ]
                },
                "clawLimbo": {
                    "transitions": [
                        {
                            "bite": "v.attackMode = (math.floor(math.random(0,2))); return !query.is_delayed_attacking && v.attackMode == 0;"
                        },
                        {
                            "claw": "!query.is_delayed_attacking && v.attackMode == 1"
                        },
                        {
                            "default": "!query.has_target || !query.is_sheared"
                        }
                    ],
                    "on_exit": [
                        "@s rift:cannot_use_claw_werewolf"
                    ]
                }
            }
        }
    }
}