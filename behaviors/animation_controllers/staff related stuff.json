{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.harvest_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"hasStaffGeneral": "query.get_equipped_item_name('main_hand') == 'harvest_staff' && query.is_riding && (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"hasStaffApatosaurus": "query.get_equipped_item_name('main_hand') == 'harvest_staff' && query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:apatosaurus'"
						}
					]
				},
				"hasStaffGeneral": {
					"transitions": [
						{
							"useGeneral": "query.get_equipped_item_name('main_hand') == 'harvest_staff' && query.is_using_item && (query.get_ride -> query.is_saddled)"
						},
						{
							"default": "!query.is_riding || query.get_equipped_item_name('main_hand') != 'harvest_staff' || (query.get_ride -> query.owner_identifier) == 'rift:apatosaurus'"
						}
					]
				},
				"useGeneral": {
					"transitions": [
						{
							"hasStaffGeneral": "!query.is_using_item"
						}
					],
					"on_entry": [
						"/function cmd.harvest_staff"
					]
				},
				"hasStaffApatosaurus": {
					"transitions": [
						{
							"useApatosaurus": "query.get_equipped_item_name('main_hand') == 'harvest_staff' && query.is_using_item && (query.get_ride -> query.is_saddled)"
						},
						{
							"default": "!query.is_riding || query.get_equipped_item_name('main_hand') != 'harvest_staff' || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						}
					]
				},
				"useApatosaurus": {
					"transitions": [
						{
							"hasStaffApatosaurus": "!query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:activate_tamed_harvest"
					],
					"on_exit": [
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:deactivate_tamed_harvest"
					]
				}
			}
		},
		"controller.animation.command_console": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"has_staff": "query.get_equipped_item_name('main_hand') == 'command_console' && query.is_riding"
						}
					]
				},
				"has_staff": {
					"transitions": [
						{
							"use": "query.get_equipped_item_name('main_hand') == 'command_console' && query.is_using_item"
						},
						{
							"default": "!query.is_riding || query.get_equipped_item_name('main_hand') != 'command_console'"
						}
					]
				},
				"use": {
					"transitions": [
						{
							"has_staff": "!query.is_using_item"
						}
					],
					"on_entry": [
						"/function cmd.command_console"
					]
				}
			}
		},
		"controller.animation.aggravating_horn": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"has_horn": "query.get_equipped_item_name('main_hand') == 'aggravating_horn'"
						}
					]
				},
				"has_horn": {
					"transitions": [
						{
							"use": "query.get_equipped_item_name('main_hand') == 'aggravating_horn' && query.is_using_item"
						},
						{
							"default": "query.get_equipped_item_name('main_hand') != 'aggravating_horn'"
						}
					]
				},
				"use": {
					"transitions": [
						{
							"has_horn": "!query.is_using_item"
						}
					],
					"on_entry": [
						"/function cmd.aggravating_horn",
						"/playsound item.aggravating_horn_sounds @a[r=64]"
					]
				}
			}
		},
		"controller.animation.tyrannosaurus_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:tyrannosaurus'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus'"
						},
						{
							"biteModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"biteModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useBiteMode": "!query.is_using_item"
						},
						{
							"biteToRoar": "query.all_animations_finished"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:tyrannosaurus_bite ~ ~ ~",
						"/event entity @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family",
						"/execute @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.tyrannosaurus.attack",
						"/execute @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ function cmd.tyrannosaurus_forced_break_blocks"
					]
				},
				"biteToRoar": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"roarMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Roar Mode\"}]}"
					]
				},
				"roarMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus'"
						},
						{
							"roarModeLimbo": "query.get_equipped_item_name('main_hand') == 'command_staff' && query.is_using_item && (query.get_ride -> query.is_saddled)"
						}
					]
				},
				"roarModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useRoarMode": "!query.is_using_item"
						},
						{
							"roarToBite": "query.all_animations_finished"
						}
					]
				},
				"useRoarMode": {
					"transitions": [
						{
							"roarMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:tyrannosaurus, c=1, tag=tamed, tag=!baby] add tyrannosaurusRoar"
					]
				},
				"roarToBite": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:tyrannosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"biteMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.stegosaurus_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"stabMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:stegosaurus'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family",
						"/tag @s remove stegoFocusCooldown",
						"/scoreboard players set @s stegoFocusCharge 0"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stab Mode\"}]}",
						"/execute @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=stegoCooldown] ~ ~ ~ tag @p add stegoFocusCooldown"
					]
				},
				"stabMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus'"
						},
						{
							"stabModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled)"
						}
					]
				},
				"stabModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useStabMode": "!query.is_using_item"
						},
						{
							"stabToFocus": "query.all_animations_finished"
						}
					]
				},
				"useStabMode": {
					"transitions": [
						{
							"stabMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:stegosaurus_stab ~ ~ ~",
						"/event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family",
						"/execute @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.stegosaurus.attack"
					]
				},
				"stabToFocus": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"focusMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Focused Stab Mode\"}]}",
						"/tellraw @s {\"rawtext\":[{\"text\":\"To use your focus attack, press and hold jump to charge up energy, then release for massive damage!\"}]}"
					]
				},
				"focusMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus'"
						},
						{
							"focusToPlateFling": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						},
						{
							"useFocusMode": "(query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff' && query.is_jumping"
						}
					],
					"on_entry": [
						"/scoreboard players set @s stegoFocusCharge 0"
					]
				},
				"useFocusMode": {
					"transitions": [
						{
							"focusMode": "query.get_equipped_item_name('main_hand') != 'command_staff' || !query.is_jumping"
						}
					],
					"animations": [
						"animStegoFocus"
					],
					"on_entry": [
						"/tellraw @s[tag=stegoFocusCooldown] {\"rawtext\":[{\"text\":\"Focused stab on cooldown\"}]}"
					],
					"on_exit": [
						"/execute @s[scores={stegoFocusCharge=1}] ~ ~ ~ event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:focused_stab_one",
						"/execute @s[scores={stegoFocusCharge=2}] ~ ~ ~ event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:focused_stab_two",
						"/execute @s[scores={stegoFocusCharge=3}] ~ ~ ~ event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:focused_stab_three",
						"/execute @s[scores={stegoFocusCharge=4}] ~ ~ ~ event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:focused_stab_four",
						"/execute @s[scores={stegoFocusCharge=5}] ~ ~ ~ event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:focused_stab_five",
						"/event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby, tag=!stegoCooldown] rift:on_forced_attack_family",
						"/tag @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] add stegoCooldown",
						"/tag @s add stegoFocusCooldown"
					]
				},
				"focusToPlateFling": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"plateFlingMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Plate Fling Mode\"}]}"
					]
				},
				"plateFlingMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus'"
						},
						{
							"plateFlingLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] rift:activate_forced_plate_fling_pose"
					]
				},
				"plateFlingLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"usePlateFlingMode": "!query.is_using_item"
						},
						{
							"plateFlingToStab": "query.all_animations_finished"
						}
					]
				},
				"usePlateFlingMode": {
					"transitions": [
						{
							"plateFlingMode": "query.all_animations_finished"
						}
					],
					"animations": [
						"animStegoPlateFling"
					]
				},
				"plateFlingToStab": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:stegosaurus'"
						},
						{
							"stabMode": "!query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:stegosaurus, c=1, tag=tamed, tag=!baby] rift:deactivate_forced_plate_fling_pose"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stab Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.triceratops_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"stabMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:triceratops'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stab Mode\"}]}"
					]
				},
				"stabMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops'"
						},
						{
							"stabModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"stabModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useStabMode": "!query.is_using_item"
						},
						{
							"stabToCharge": "query.all_animations_finished"
						}
					]
				},
				"useStabMode": {
					"transitions": [
						{
							"stabMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.triceratops.attack",
						"/execute @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby, tag=!illagerCaptain] ~ ~ ~ summon rift:triceratops_stab ~ ~ ~",
						"/execute @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby, tag=illagerCaptain] ~ ~ ~ summon rift:triceratops_buffed_stab ~ ~ ~",
						"/event entity @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"stabToCharge": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops'"
						},
						{
							"chargeMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Charge Mode\"}]}"
					]
				},
				"chargeMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops'"
						},
						{
							"chargeModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"chargeModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useChargeMode": "!query.is_using_item"
						},
						{
							"chargeToStab": "query.all_animations_finished"
						}
					]
				},
				"useChargeMode": {
					"transitions": [
						{
							"chargeMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:triceratops, c=1, tag=tamed, tag=!baby] add trikeCharge"
					]
				},
				"chargeToStab": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:triceratops'"
						},
						{
							"stabMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stab Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.utahraptor_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"slashMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:utahraptor'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				},
				"slashMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor'"
						},
						{
							"slashModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] rift:stop_forced_slash",
						"/event entity @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_slash_entity"
					]
				},
				"slashModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useSlashMode": "!query.is_using_item"
						},
						{
							"slashToCall": "query.all_animations_finished"
						}
					]
				},
				"useSlashMode": {
					"transitions": [
						{
							"slashMode": "(1.0)"
						}
					],
					"on_entry": [
						"/playanimation @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] animation.utahraptor.attack",
						"/event entity @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] rift:on_summon_forced_slash_entity",
						"/event entity @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"slashToCall": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor'"
						},
						{
							"callMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Call Mode\"}]}"
					]
				},
				"callMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor'"
						},
						{
							"callModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"callModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useCallMode": "!query.is_using_item"
						},
						{
							"callToSlash": "query.all_animations_finished"
						}
					]
				},
				"useCallMode": {
					"transitions": [
						{
							"callMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:utahraptor, c=1, tag=tamed, tag=!baby] add utahBuff"
					]
				},
				"callToSlash": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:utahraptor'"
						},
						{
							"slashMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.apatosaurus_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"stompMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:apatosaurus'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stomp Mode\"}]}"
					]
				},
				"stompMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"stompModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"stompModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useStompMode": "!query.is_using_item"
						},
						{
							"stompToTailWhip": "query.all_animations_finished"
						}
					]
				},
				"useStompMode": {
					"transitions": [
						{
							"stompMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:apatosaurus_smash ~ ~ ~",
						"/playanimation @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] animation.apatosaurus.stomp",
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family",
						"/execute @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ function cmd.apatosaurus_forced_break_blocks"
					]
				},
				"stompToTailWhip": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"tailWhipMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Tail Whip Mode\"}]}"
					]
				},
				"tailWhipMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"tailWhipModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"tailWhipModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useTailWhipMode": "!query.is_using_item"
						},
						{
							"tailWhipToBulldoze": "query.all_animations_finished"
						}
					]
				},
				"useTailWhipMode": {
					"transitions": [
						{
							"tailWhipMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:apatosaurus_tail_whip ~ ~ ~",
						"/playanimation @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] animation.apatosaurus.tail_whip",
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"tailWhipToBulldoze": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"bulldozeMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bulldoze Mode\"}]}",
						"/tellraw @s {\"rawtext\":[{\"text\":\"To use bulldoze, press and hold jump!\"}]}"
					]
				},
				"bulldozeMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"bulldozeToStomp": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						},
						{
							"useBulldozeMode": "(query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff' && query.is_jumping"
						}
					]
				},
				"useBulldozeMode": {
					"transitions": [
						{
							"bulldozeMode": "query.get_equipped_item_name('main_hand') != 'command_staff' || !query.is_jumping"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:activate_tamed_break_stuff"
					],
					"on_exit": [
						"/event entity @e[type=rift:apatosaurus, c=1, tag=tamed, tag=!baby] rift:deactivate_tamed_break_stuff"
					]
				},
				"bulldozeToStomp": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:apatosaurus'"
						},
						{
							"stompMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Stomp Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.parasaurolophus_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"attackMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:parasaurolophus'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Attack Mode\"}]}"
					]
				},
				"attackMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"attackModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"attackModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useAttackMode": "!query.is_using_item"
						},
						{
							"attackToScare": "query.all_animations_finished"
						}
					]
				},
				"useAttackMode": {
					"transitions": [
						{
							"attackMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.parasaurolophus.harvest",
						"/execute @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:parasaurolophus_attack ~ ~ ~",
						"/event entity @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"attackToScare": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"scareMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Scare Mode\"}]}"
					]
				},
				"scareMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"scareModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"scareModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useScareMode": "!query.is_using_item"
						},
						{
							"scareToAggravate": "query.all_animations_finished"
						}
					]
				},
				"useScareMode": {
					"transitions": [
						{
							"scareMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] add parasaurCallScare"
					]
				},
				"scareToAggravate": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"aggravateMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Aggravate Mode\"}]}"
					]
				},
				"aggravateMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"aggravateModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"aggravateModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useAggravateMode": "!query.is_using_item"
						},
						{
							"aggravateToAttack": "query.all_animations_finished"
						}
					]
				},
				"useAggravateMode": {
					"transitions": [
						{
							"aggravateMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:parasaurolophus, c=1, tag=tamed, tag=!baby] add parasaurCallAggravate"
					]
				},
				"aggravateToAttack": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:parasaurolophus'"
						},
						{
							"attackMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Attack Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.sarcosuchus_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:sarcosuchus'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:sarcosuchus, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus'"
						},
						{
							"biteModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"biteModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useBiteMode": "!query.is_using_item"
						},
						{
							"biteToSpin": "query.all_animations_finished"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(1.0)"
						}
					],
					"on_entry": [
						"/playanimation @e[type=rift:sarcosuchus, c=1, tag=tamed, tag=!baby] animation.sarcosuchus.bite",
						"/execute @e[type=rift:sarcosuchus, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:sarcosuchus_bite ~ ~ ~",
						"/event entity @e[type=rift:sarcosuchus, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"biteToSpin": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus'"
						},
						{
							"spinMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Spin Mode\"}]}"
					]
				},
				"spinMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus'"
						},
						{
							"spinModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"spinModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useSpinMode": "!query.is_using_item"
						},
						{
							"spinToBite": "query.all_animations_finished"
						}
					]
				},
				"useSpinMode": {
					"transitions": [
						{
							"spinMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:sarcosuchus, c=1, tag=tamed, tag=!baby] add sarcoSpin"
					]
				},
				"spinToBite": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:sarcosuchus'"
						},
						{
							"biteMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.anomalocaris_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"slashMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:anomalocaris'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				},
				"slashMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"slashModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"slashModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useSlashMode": "!query.is_using_item"
						},
						{
							"slashToCarry": "query.all_animations_finished"
						}
					]
				},
				"useSlashMode": {
					"transitions": [
						{
							"slashMode": "(1.0)"
						}
					],
					"on_entry": [
						"/playanimation @e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] animation.anomalocaris.attack",
						"/execute @e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] ~ ~ ~ summon rift:anomalocaris_slash",
						"/event entity @e@e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"slashToCarry": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"carryMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Carry Mode\"}]}"
					]
				},
				"carryMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"carryModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"carryModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useCarryMode": "!query.is_using_item"
						},
						{
							"carryToInvisibility": "query.all_animations_finished"
						}
					]
				},
				"useCarryMode": {
					"transitions": [
						{
							"carryMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] add carrying"
					]
				},
				"carryToInvisibility": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"invisibilityMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Invisibility Mode\"}]}"
					]
				},
				"invisibilityMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"invisibilityModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"invisibilityModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useInvisibilityMode": "!query.is_using_item"
						},
						{
							"invisibilityToSlash": "query.all_animations_finished"
						}
					]
				},
				"useInvisibilityMode": {
					"transitions": [
						{
							"invisibilityMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:anomalocaris, c=1, tag=tamed, tag=!baby] add anomaloInvisible"
					]
				},
				"invisibilityToSlash": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:anomalocaris'"
						},
						{
							"slashMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.saurophaganax_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:saurophaganax'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax'"
						},
						{
							"biteModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"biteModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useBiteMode": "!query.is_using_item"
						},
						{
							"biteToLightBlast": "query.all_animations_finished"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(1.0)"
						}
					],
					"on_entry": [
						"/playanimation @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby] animation.saurophaganax.bite",
						"/event entity @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby] rift:on_summon_forced_bite_entity",
						"/event entity @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"biteToLightBlast": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax'"
						},
						{
							"lightBlastMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Light Blast Mode\"}]}"
					]
				},
				"lightBlastMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax'"
						},
						{
							"lightBlastModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"lightBlastModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useLightBlastMode": "!query.is_using_item"
						},
						{
							"lightBlastToBite": "query.all_animations_finished"
						}
					]
				},
				"useLightBlastMode": {
					"transitions": [
						{
							"lightBlastMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby, scores={saurophLightBlst=10}] add saurophaganaxLightBlast",
						"/execute @e[type=rift:saurophaganax, c=1, tag=tamed, tag=!baby, scores={saurophLightBlst=!10}] ~ ~ ~ tellraw @p {\"rawtext\":[{\"text\":\"You need to use the Saurophaganax's Bite attack on 10 monsters/bugs to use this!\"}]}"
					]
				},
				"lightBlastToBite": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:saurophaganax'"
						},
						{
							"biteMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.direwolf_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "query.is_riding && ((query.get_ride -> query.owner_identifier) == 'rift:direwolf') && !(query.get_ride -> query.is_ignited)"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"biteModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"biteModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited) || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useBiteMode": "!query.is_using_item"
						},
						{
							"biteToCall": "query.all_animations_finished"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(1.0)"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:on_summon_forced_bite_entity_normal",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:on_forced_attack_family"
					]
				},
				"biteToCall": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"callMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Call Mode\"}]}"
					]
				},
				"callMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"callModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"callModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited) || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useCallMode": "!query.is_using_item"
						},
						{
							"callToSniff": "query.all_animations_finished"
						}
					]
				},
				"useCallMode": {
					"transitions": [
						{
							"callMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] add direwolfBuff"
					]
				},
				"callToSniff": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"sniffMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Sniff Mode\"}]}"
					]
				},
				"sniffMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"sniffModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ tag @e remove sniffedByDirewolf"
					]
				},
				"sniffModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited) || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useSniffMode": "!query.is_using_item"
						},
						{
							"sniffToSnarl": "query.all_animations_finished"
						}
					]
				},
				"useSniffMode": {
					"transitions": [
						{
							"sniffMode": "(1.0)"
						}
					],
					"on_entry": [
						"/tag @s add direwolfSniff",
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ tag @e[x=~-72, dx=144, y=~-4, dy=20, z=~-72, dz=144, c=16, type=!xp_orb, type=!player, type=!item, tag=!tamed, family=!inanimate] add sniffedByDirewolf"
					]
				},
				"sniffToSnarl": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"snarlMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Snarl Mode\"}]}"
					]
				},
				"snarlMode": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"snarlModeLimbo": "query.is_using_item && (query.get_ride -> query.is_saddled) && query.get_equipped_item_name('main_hand') == 'command_staff'"
						}
					]
				},
				"snarlModeLimbo": {
					"animations": [
						"animAbilitySwitchCooldown"
					],
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || query.get_equipped_item_name('main_hand') != 'command_staff'"
						},
						{
							"useSnarlMode": "!query.is_using_item"
						},
						{
							"snarlToBite": "query.all_animations_finished"
						}
					]
				},
				"useSnarlMode": {
					"transitions": [
						{
							"snarlMode": "(1.0)"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.direwolf.snarl",
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ effect @e[type=!player, tag=!tamed, family=!inanimate, r=16] weakness 90"
					]
				},
				"snarlToBite": {
					"transitions": [
						{
							"default": "!query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || (query.get_ride -> query.is_ignited)"
						},
						{
							"biteMode": "!query.is_using_item"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.direwolf_werewolf_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "(query.get_equipped_item_name('main_hand') == 'command_staff') && query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:direwolf' && (query.get_ride -> query.is_ignited)"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:enable_jump",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:disable_jump"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"biteToSlash": "query.is_jumping && query.is_riding"
						},
						{
							"useBiteMode": "query.is_using_item"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:use_forced_bite"
					],
					"on_exit": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:stop_forced_attack",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_bite_entity"
					]
				},
				"biteToSlash": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"slashMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				},
				"slashMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"slashToBoulderThrow": "query.is_jumping && query.is_riding"
						},
						{
							"useSlashMode": "query.is_using_item"
						}
					]
				},
				"useSlashMode": {
					"transitions": [
						{
							"slashMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:use_forced_slash"
					],
					"on_exit": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:stop_forced_attack",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_slash_entity"
					]
				},
				"slashToBoulderThrow": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"boulderThrowMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Boulder Throw Mode\"}]}"
					]
				},
				"boulderThrowMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"boulderThrowToCall": "query.is_jumping && query.is_riding"
						},
						{
							"useBoulderThrowMode": "query.is_using_item"
						}
					]
				},
				"useBoulderThrowMode": {
					"transitions": [
						{
							"boulderThrowMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.direwolf_werewolf.boulder_hurl",
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:start_throwing_boulder"
					],
					"on_exit": [
						"/event entity @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] rift:stop_forced_attack",
						"/effect @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] slowness 0"
					]
				},
				"boulderThrowToCall": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"callMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Call Mode\"}]}"
					]
				},
				"callMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"callToSniff": "query.is_jumping && query.is_riding"
						},
						{
							"useCallMode": "query.is_using_item"
						}
					]
				},
				"useCallMode": {
					"transitions": [
						{
							"callMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] add direwolfBuff"
					]
				},
				"callToSniff": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"sniffMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Sniff Mode\"}]}"
					]
				},
				"sniffMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"sniffToSnarl": "query.is_jumping && query.is_riding"
						},
						{
							"useSniffMode": "query.is_using_item"
						}
					]
				},
				"useSniffMode": {
					"transitions": [
						{
							"sniffMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/tag @s add direwolfSniff",
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ tag @e[x=~-72, dx=144, y=~-4, dy=20, z=~-72, dz=144, c=16, type=!xp_orb, type=!player, type=!item, tag=!tamed, family=!inanimate] add sniffedByDirewolf"
					],
					"on_exit": [
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ tag @e remove sniffedByDirewolf"
					]
				},
				"sniffToSnarl": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"snarlMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Snarl Mode\"}]}"
					]
				},
				"snarlMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"snarlToBite": "query.is_jumping && query.is_riding"
						},
						{
							"useSnarlMode": "query.is_using_item"
						}
					]
				},
				"useSnarlMode": {
					"transitions": [
						{
							"snarlMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ playanimation @s animation.direwolf_werewolf.snarl",
						"/execute @e[type=rift:direwolf, c=1, tag=tamed, tag=!baby] ~ ~ ~ effect @e[type=!player, tag=!tamed, family=!inanimate, r=16] weakness 30 1"
					]
				},
				"snarlToBite": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:direwolf' || !(query.get_ride -> query.is_ignited)"
						},
						{
							"biteMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.megaloceros_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"headbuttMode": "(query.get_equipped_item_name('main_hand') == 'command_staff') && query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:megaloceros'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:enable_jump",
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Headbutt Mode\"}]}",
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:disable_jump"
					]
				},
				"headbuttMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:megaloceros'"
						},
						{
							"headbuttToCharge": "query.is_jumping && query.is_riding"
						},
						{
							"useHeadbuttMode": "query.is_using_item && (query.get_ride -> query.is_saddled)"
						}
					]
				},
				"useHeadbuttMode": {
					"transitions": [
						{
							"headbuttMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:use_forced_headbutt"
					],
					"on_exit": [
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:stop_forced_headbutt",
						"/event entity @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_headbutt_entity"
					]
				},
				"headbuttToCharge": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:megaloceros'"
						},
						{
							"chargeMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Charge Mode\"}]}"
					]
				},
				"chargeMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:megaloceros'"
						},
						{
							"chargeToHeadbutt": "query.is_jumping && query.is_riding"
						},
						{
							"useChargeMode": "query.is_using_item && (query.get_ride -> query.is_saddled)"
						}
					]
				},
				"useChargeMode": {
					"transitions": [
						{
							"chargeMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/tag @e[type=rift:megaloceros, c=1, tag=tamed, tag=!baby] add megalocerosCharge"
					]
				},
				"chargeToHeadbutt": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:megaloceros'"
						},
						{
							"headbuttMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Headbutt Mode\"}]}"
					]
				}
			}
		},
		"controller.animation.baryonyx_command_staff": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"biteMode": "(query.get_equipped_item_name('main_hand') == 'command_staff') && query.is_riding && (query.get_ride -> query.owner_identifier) == 'rift:baryonyx'"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:no_forced_attack_family"
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				},
				"biteMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:baryonyx'"
						},
						{
							"biteToSlash": "query.is_jumping && query.is_riding"
						},
						{
							"useBiteMode": "query.is_using_item && (query.get_ride -> query.is_saddled)"
						}
					]
				},
				"useBiteMode": {
					"transitions": [
						{
							"biteMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:use_forced_bite"
					],
					"on_exit": [
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:stop_forced_bite",
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_bite"
					]
				},
				"biteToSlash": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:baryonyx'"
						},
						{
							"slashMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Slash Mode\"}]}"
					]
				},
				"slashMode": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:baryonyx'"
						},
						{
							"slashToBite": "query.is_jumping && query.is_riding"
						},
						{
							"useSlashMode": "query.is_using_item"
						}
					]
				},
				"useSlashMode": {
					"transitions": [
						{
							"slashMode": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_using_item"
						}
					],
					"on_entry": [
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:use_forced_slash"
					],
					"on_exit": [
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:stop_forced_slash",
						"/event entity @e[type=rift:baryonyx, c=1, tag=tamed, tag=!baby] rift:no_summon_forced_slash"
					]
				},
				"slashToBite": {
					"transitions": [
						{
							"default": "(query.get_equipped_item_name('main_hand') != 'command_staff') || !query.is_riding || (query.get_ride -> query.owner_identifier) != 'rift:baryonyx'"
						},
						{
							"biteMode": "!query.is_jumping"
						}
					],
					"on_exit": [
						"/tellraw @s {\"rawtext\":[{\"text\":\"Ability set to Bite Mode\"}]}"
					]
				}
			}
		}
	}
}