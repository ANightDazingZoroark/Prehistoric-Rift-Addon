{
    "format_version": "1.10.0",
    "minecraft:client_entity": {
        "description": {
            "animations": {
                "baby_transform": "animation.horse.v3.baby_transform",
                "contBleed": "controller.animation.bleeding_particles",
                "eat": "animation.horse.v3.eat",
                "look_at_player": "animation.horse.v3.look_at_player",
                "rear": "animation.horse.v3.rear",
                "tail": "animation.horse.v3.tail",
                "walk": "animation.horse.v3.walk"
            },
            "geometry": {
                "default": "geometry.horse.v3"
            },
            "identifier": "minecraft:horse",
            "materials": {
                "default": "horse_leather_armor"
            },
            "min_engine_version": "1.17.10",
            "particle_effects": {
                "bleeding": "rift:bleeding_medium"
            },
            "render_controllers": [
                "controller.render.horse.v3"
            ],
            "scripts": {
                "animate": [
                    {
                        "baby_transform": "query.is_baby"
                    },
                    "walk",
                    "look_at_player",
                    {
                        "rear": "variable.stand_anim > 0.0"
                    },
                    {
                        "eat": "!query.is_standing"
                    },
                    {
                        "tail": "variable.shake_tail"
                    },
                    "contBleed"
                ],
                "initialize": [
                    "variable.eat_anim = 0.0;"
                ],
                "pre_animation": [
                    "variable.armor_texture_slot = query.armor_texture_slot(1);",
                    "variable.eat_anim = math.clamp(variable.eat_anim + (query.is_grazing ? ((1.0 - variable.eat_anim) * 0.4 + 0.05) : -variable.eat_anim * 0.4 - 0.05) * query.delta_time * 20.0, 0.0, 1.0);",
                    "variable.head_x_rot = query.target_x_rotation + (query.modified_move_speed > 0.2 ? (math.cos(query.modified_distance_moved * 11.46) * 11.46 * query.modified_move_speed + query.modified_move_speed * 11.46) : 0.0);",
                    "variable.inverse_max_stand_eat = (1.0 - math.max(variable.stand_anim, variable.eat_anim));",
                    "variable.leg_stand_factor = math.cos((query.modified_distance_moved * 38.38) + 180.0);",
                    "variable.leg_x_rot_anim = variable.leg_stand_factor * 45.8 * query.modified_move_speed;"
                ]
            },
            "spawn_egg": {
                "texture": "spawn_egg",
                "texture_index": 23
            },
            "textures": {
                "armor_diamond": "textures/entity/horse2/armor/horse_armor_diamond",
                "armor_gold": "textures/entity/horse2/armor/horse_armor_gold",
                "armor_iron": "textures/entity/horse2/armor/horse_armor_iron",
                "armor_leather": "textures/entity/horse2/armor/horse_armor_leather",
                "armor_none": "textures/entity/horse2/armor/horse_armor_none",
                "base_black": "textures/entity/horse2/horse_black",
                "base_brown": "textures/entity/horse2/horse_brown",
                "base_chestnut": "textures/entity/horse2/horse_chestnut",
                "base_creamy": "textures/entity/horse2/horse_creamy",
                "base_darkbrown": "textures/entity/horse2/horse_darkbrown",
                "base_gray": "textures/entity/horse2/horse_gray",
                "base_white": "textures/entity/horse2/horse_white",
                "markings_blackdots": "textures/entity/horse2/horse_markings_blackdots",
                "markings_none": "textures/entity/horse2/horse_markings_none",
                "markings_white": "textures/entity/horse2/horse_markings_white",
                "markings_whitedots": "textures/entity/horse2/horse_markings_whitedots",
                "markings_whitefield": "textures/entity/horse2/horse_markings_whitefield"
            }
        }
    }
}